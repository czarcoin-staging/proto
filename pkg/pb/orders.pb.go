// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: orders.proto

package pb

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// PieceAction is an enumeration of all possible executed actions on storage node
type PieceAction int32

const (
	PieceAction_INVALID    PieceAction = 0
	PieceAction_PUT        PieceAction = 1
	PieceAction_GET        PieceAction = 2
	PieceAction_GET_AUDIT  PieceAction = 3
	PieceAction_GET_REPAIR PieceAction = 4
	PieceAction_PUT_REPAIR PieceAction = 5
	PieceAction_DELETE     PieceAction = 6
)

var PieceAction_name = map[int32]string{
	0: "INVALID",
	1: "PUT",
	2: "GET",
	3: "GET_AUDIT",
	4: "GET_REPAIR",
	5: "PUT_REPAIR",
	6: "DELETE",
}

var PieceAction_value = map[string]int32{
	"INVALID":    0,
	"PUT":        1,
	"GET":        2,
	"GET_AUDIT":  3,
	"GET_REPAIR": 4,
	"PUT_REPAIR": 5,
	"DELETE":     6,
}

func (x PieceAction) String() string {
	return proto.EnumName(PieceAction_name, int32(x))
}

func (PieceAction) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e0f5d4cf0fc9e41b, []int{0}
}

// OrderLimit2 is provided by satellite to execute specific action on storage node within some limits
type OrderLimit2 struct {
	// unique serial to avoid replay attacks
	SerialNumber SerialNumber `protobuf:"bytes,1,opt,name=serial_number,json=serialNumber,proto3,customtype=SerialNumber" json:"serial_number"`
	// satellite who issued this order limit allowing orderer to do the specified action
	SatelliteId NodeID `protobuf:"bytes,2,opt,name=satellite_id,json=satelliteId,proto3,customtype=NodeID" json:"satellite_id"`
	// uplink who requested or whom behalf the order limit to do an action
	UplinkId NodeID `protobuf:"bytes,3,opt,name=uplink_id,json=uplinkId,proto3,customtype=NodeID" json:"uplink_id"`
	// storage node who can reclaim the order limit specified by serial
	StorageNodeId NodeID `protobuf:"bytes,4,opt,name=storage_node_id,json=storageNodeId,proto3,customtype=NodeID" json:"storage_node_id"`
	// piece which is allowed to be touched
	PieceId PieceID `protobuf:"bytes,5,opt,name=piece_id,json=pieceId,proto3,customtype=PieceID" json:"piece_id"`
	// limit in bytes how much can be changed
	Limit                int64                `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	Action               PieceAction          `protobuf:"varint,7,opt,name=action,proto3,enum=orders.PieceAction" json:"action,omitempty"`
	PieceExpiration      *timestamp.Timestamp `protobuf:"bytes,8,opt,name=piece_expiration,json=pieceExpiration,proto3" json:"piece_expiration,omitempty"`
	OrderExpiration      *timestamp.Timestamp `protobuf:"bytes,9,opt,name=order_expiration,json=orderExpiration,proto3" json:"order_expiration,omitempty"`
	SatelliteSignature   []byte               `protobuf:"bytes,10,opt,name=satellite_signature,json=satelliteSignature,proto3" json:"satellite_signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *OrderLimit2) Reset()         { *m = OrderLimit2{} }
func (m *OrderLimit2) String() string { return proto.CompactTextString(m) }
func (*OrderLimit2) ProtoMessage()    {}
func (*OrderLimit2) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f5d4cf0fc9e41b, []int{0}
}
func (m *OrderLimit2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderLimit2.Unmarshal(m, b)
}
func (m *OrderLimit2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderLimit2.Marshal(b, m, deterministic)
}
func (m *OrderLimit2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderLimit2.Merge(m, src)
}
func (m *OrderLimit2) XXX_Size() int {
	return xxx_messageInfo_OrderLimit2.Size(m)
}
func (m *OrderLimit2) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderLimit2.DiscardUnknown(m)
}

var xxx_messageInfo_OrderLimit2 proto.InternalMessageInfo

func (m *OrderLimit2) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *OrderLimit2) GetAction() PieceAction {
	if m != nil {
		return m.Action
	}
	return PieceAction_INVALID
}

func (m *OrderLimit2) GetPieceExpiration() *timestamp.Timestamp {
	if m != nil {
		return m.PieceExpiration
	}
	return nil
}

func (m *OrderLimit2) GetOrderExpiration() *timestamp.Timestamp {
	if m != nil {
		return m.OrderExpiration
	}
	return nil
}

func (m *OrderLimit2) GetSatelliteSignature() []byte {
	if m != nil {
		return m.SatelliteSignature
	}
	return nil
}

// Order2 is a one step of fullfilling Amount number of bytes from an OrderLimit2 with SerialNumber
type Order2 struct {
	// serial of the order limit that was signed
	SerialNumber SerialNumber `protobuf:"bytes,1,opt,name=serial_number,json=serialNumber,proto3,customtype=SerialNumber" json:"serial_number"`
	// amount to be signed for
	Amount int64 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	// signature
	UplinkSignature      []byte   `protobuf:"bytes,3,opt,name=uplink_signature,json=uplinkSignature,proto3" json:"uplink_signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Order2) Reset()         { *m = Order2{} }
func (m *Order2) String() string { return proto.CompactTextString(m) }
func (*Order2) ProtoMessage()    {}
func (*Order2) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f5d4cf0fc9e41b, []int{1}
}
func (m *Order2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Order2.Unmarshal(m, b)
}
func (m *Order2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Order2.Marshal(b, m, deterministic)
}
func (m *Order2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Order2.Merge(m, src)
}
func (m *Order2) XXX_Size() int {
	return xxx_messageInfo_Order2.Size(m)
}
func (m *Order2) XXX_DiscardUnknown() {
	xxx_messageInfo_Order2.DiscardUnknown(m)
}

var xxx_messageInfo_Order2 proto.InternalMessageInfo

func (m *Order2) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Order2) GetUplinkSignature() []byte {
	if m != nil {
		return m.UplinkSignature
	}
	return nil
}

type PieceHash struct {
	// piece id
	PieceId PieceID `protobuf:"bytes,1,opt,name=piece_id,json=pieceId,proto3,customtype=PieceID" json:"piece_id"`
	// hash of the piece that was/is uploaded
	Hash []byte `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	// signature either satellite or storage node
	Signature            []byte   `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PieceHash) Reset()         { *m = PieceHash{} }
func (m *PieceHash) String() string { return proto.CompactTextString(m) }
func (*PieceHash) ProtoMessage()    {}
func (*PieceHash) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f5d4cf0fc9e41b, []int{2}
}
func (m *PieceHash) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PieceHash.Unmarshal(m, b)
}
func (m *PieceHash) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PieceHash.Marshal(b, m, deterministic)
}
func (m *PieceHash) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PieceHash.Merge(m, src)
}
func (m *PieceHash) XXX_Size() int {
	return xxx_messageInfo_PieceHash.Size(m)
}
func (m *PieceHash) XXX_DiscardUnknown() {
	xxx_messageInfo_PieceHash.DiscardUnknown(m)
}

var xxx_messageInfo_PieceHash proto.InternalMessageInfo

func (m *PieceHash) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *PieceHash) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func init() {
	proto.RegisterEnum("orders.PieceAction", PieceAction_name, PieceAction_value)
	proto.RegisterType((*OrderLimit2)(nil), "orders.OrderLimit2")
	proto.RegisterType((*Order2)(nil), "orders.Order2")
	proto.RegisterType((*PieceHash)(nil), "orders.PieceHash")
}

func init() { proto.RegisterFile("orders.proto", fileDescriptor_e0f5d4cf0fc9e41b) }

var fileDescriptor_e0f5d4cf0fc9e41b = []byte{
	// 502 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x52, 0x4d, 0x6b, 0xdb, 0x40,
	0x10, 0x8d, 0xfc, 0x21, 0xdb, 0xe3, 0x2f, 0xb1, 0x09, 0x45, 0x98, 0x82, 0x4d, 0x4e, 0x6e, 0x02,
	0x32, 0x75, 0xa1, 0xd0, 0xa3, 0x83, 0x44, 0x2a, 0x30, 0xae, 0xd9, 0xc8, 0x3d, 0xf4, 0x62, 0xd6,
	0xd1, 0x56, 0x5e, 0x2a, 0x69, 0x85, 0xb4, 0x82, 0xfe, 0x82, 0x1e, 0xfb, 0xbb, 0xfa, 0x1b, 0x7a,
	0xc8, 0x6f, 0x29, 0x1a, 0xc9, 0x1f, 0x2d, 0x81, 0x1c, 0x7a, 0xdb, 0x37, 0xef, 0xbd, 0x99, 0x65,
	0xde, 0x40, 0x4f, 0xa6, 0x3e, 0x4f, 0x33, 0x2b, 0x49, 0xa5, 0x92, 0x44, 0x2f, 0xd1, 0x08, 0x02,
	0x19, 0xc8, 0xb2, 0x36, 0x1a, 0x07, 0x52, 0x06, 0x21, 0x9f, 0x21, 0xda, 0xe5, 0x5f, 0x67, 0x4a,
	0x44, 0x3c, 0x53, 0x2c, 0x4a, 0x4a, 0xc1, 0xf5, 0xcf, 0x06, 0x74, 0x3f, 0x15, 0xbe, 0xa5, 0x88,
	0x84, 0x9a, 0x93, 0x0f, 0xd0, 0xcf, 0x78, 0x2a, 0x58, 0xb8, 0x8d, 0xf3, 0x68, 0xc7, 0x53, 0x53,
	0x9b, 0x68, 0xd3, 0xde, 0xdd, 0xd5, 0xaf, 0xa7, 0xf1, 0xc5, 0xef, 0xa7, 0x71, 0xef, 0x01, 0xc9,
	0x15, 0x72, 0xb4, 0x97, 0x9d, 0x21, 0xf2, 0x16, 0x7a, 0x19, 0x53, 0x3c, 0x0c, 0x85, 0xe2, 0x5b,
	0xe1, 0x9b, 0x35, 0x74, 0x0e, 0x2a, 0xa7, 0xbe, 0x92, 0x3e, 0x77, 0x6d, 0xda, 0x3d, 0x6a, 0x5c,
	0x9f, 0xdc, 0x42, 0x27, 0x4f, 0x42, 0x11, 0x7f, 0x2b, 0xf4, 0xf5, 0x67, 0xf5, 0xed, 0x52, 0xe0,
	0xfa, 0xe4, 0x3d, 0x0c, 0x33, 0x25, 0x53, 0x16, 0xf0, 0x6d, 0x2c, 0x7d, 0x1c, 0xd1, 0x78, 0xd6,
	0xd2, 0xaf, 0x64, 0x08, 0x7d, 0x72, 0x03, 0xed, 0x44, 0xf0, 0x47, 0x34, 0x34, 0xd1, 0x30, 0xac,
	0x0c, 0xad, 0x75, 0x51, 0x77, 0x6d, 0xda, 0x42, 0x81, 0xeb, 0x93, 0x2b, 0x68, 0x86, 0xc5, 0x22,
	0x4c, 0x7d, 0xa2, 0x4d, 0xeb, 0xb4, 0x04, 0xe4, 0x16, 0x74, 0xf6, 0xa8, 0x84, 0x8c, 0xcd, 0xd6,
	0x44, 0x9b, 0x0e, 0xe6, 0x97, 0x56, 0xb5, 0x78, 0xf4, 0x2f, 0x90, 0xa2, 0x95, 0x84, 0x38, 0x60,
	0x94, 0xe3, 0xf8, 0xf7, 0x44, 0xa4, 0x0c, 0x6d, 0xed, 0x89, 0x36, 0xed, 0xce, 0x47, 0x56, 0x99,
	0x86, 0x75, 0x48, 0xc3, 0xf2, 0x0e, 0x69, 0xd0, 0x21, 0x7a, 0x9c, 0xa3, 0xa5, 0x68, 0x83, 0x43,
	0xce, 0xdb, 0x74, 0x5e, 0x6e, 0x83, 0x9e, 0xb3, 0x36, 0x33, 0xb8, 0x3c, 0x85, 0x92, 0x89, 0x20,
	0x66, 0x2a, 0x4f, 0xb9, 0x09, 0xc5, 0x1e, 0x28, 0x39, 0x52, 0x0f, 0x07, 0xe6, 0xfa, 0x87, 0x06,
	0x3a, 0x1e, 0xc4, 0x7f, 0xdd, 0xc2, 0x2b, 0xd0, 0x59, 0x24, 0xf3, 0x58, 0xe1, 0x15, 0xd4, 0x69,
	0x85, 0xc8, 0x1b, 0x30, 0xaa, 0xc0, 0x4f, 0x7f, 0xc1, 0xdc, 0xe9, 0xb0, 0xac, 0x9f, 0x3e, 0x22,
	0xa0, 0x83, 0xeb, 0xfd, 0xc8, 0xb2, 0xfd, 0x5f, 0x19, 0x6a, 0x2f, 0x64, 0x48, 0xa0, 0xb1, 0x67,
	0xd9, 0xbe, 0xbc, 0x3f, 0x8a, 0x6f, 0xf2, 0x1a, 0x3a, 0xff, 0x0e, 0x3c, 0x15, 0x6e, 0x02, 0xe8,
	0x9e, 0x25, 0x49, 0xba, 0xd0, 0x72, 0x57, 0x9f, 0x17, 0x4b, 0xd7, 0x36, 0x2e, 0x48, 0x0b, 0xea,
	0xeb, 0x8d, 0x67, 0x68, 0xc5, 0xe3, 0xde, 0xf1, 0x8c, 0x1a, 0xe9, 0x43, 0xe7, 0xde, 0xf1, 0xb6,
	0x8b, 0x8d, 0xed, 0x7a, 0x46, 0x9d, 0x0c, 0x00, 0x0a, 0x48, 0x9d, 0xf5, 0xc2, 0xa5, 0x46, 0xa3,
	0xc0, 0xeb, 0xcd, 0x11, 0x37, 0x09, 0x80, 0x6e, 0x3b, 0x4b, 0xc7, 0x73, 0x0c, 0xfd, 0xae, 0xf1,
	0xa5, 0x96, 0xec, 0x76, 0x3a, 0x06, 0xf7, 0xee, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x69, 0x39,
	0x9a, 0x2f, 0xbf, 0x03, 0x00, 0x00,
}
