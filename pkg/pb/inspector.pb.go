// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: inspector.proto

package pb

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// ListSegments
type ListIrreparableSegmentsRequest struct {
	Limit                int32    `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset               int32    `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListIrreparableSegmentsRequest) Reset()         { *m = ListIrreparableSegmentsRequest{} }
func (m *ListIrreparableSegmentsRequest) String() string { return proto.CompactTextString(m) }
func (*ListIrreparableSegmentsRequest) ProtoMessage()    {}
func (*ListIrreparableSegmentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07d9034b2dd9d26, []int{0}
}
func (m *ListIrreparableSegmentsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListIrreparableSegmentsRequest.Unmarshal(m, b)
}
func (m *ListIrreparableSegmentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListIrreparableSegmentsRequest.Marshal(b, m, deterministic)
}
func (m *ListIrreparableSegmentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListIrreparableSegmentsRequest.Merge(m, src)
}
func (m *ListIrreparableSegmentsRequest) XXX_Size() int {
	return xxx_messageInfo_ListIrreparableSegmentsRequest.Size(m)
}
func (m *ListIrreparableSegmentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListIrreparableSegmentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListIrreparableSegmentsRequest proto.InternalMessageInfo

func (m *ListIrreparableSegmentsRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListIrreparableSegmentsRequest) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type IrreparableSegment struct {
	Path                 []byte   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	SegmentDetail        *Pointer `protobuf:"bytes,2,opt,name=segment_detail,json=segmentDetail,proto3" json:"segment_detail,omitempty"`
	LostPieces           int32    `protobuf:"varint,3,opt,name=lost_pieces,json=lostPieces,proto3" json:"lost_pieces,omitempty"`
	LastRepairAttempt    int64    `protobuf:"varint,4,opt,name=last_repair_attempt,json=lastRepairAttempt,proto3" json:"last_repair_attempt,omitempty"`
	RepairAttemptCount   int64    `protobuf:"varint,5,opt,name=repair_attempt_count,json=repairAttemptCount,proto3" json:"repair_attempt_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IrreparableSegment) Reset()         { *m = IrreparableSegment{} }
func (m *IrreparableSegment) String() string { return proto.CompactTextString(m) }
func (*IrreparableSegment) ProtoMessage()    {}
func (*IrreparableSegment) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07d9034b2dd9d26, []int{1}
}
func (m *IrreparableSegment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IrreparableSegment.Unmarshal(m, b)
}
func (m *IrreparableSegment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IrreparableSegment.Marshal(b, m, deterministic)
}
func (m *IrreparableSegment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IrreparableSegment.Merge(m, src)
}
func (m *IrreparableSegment) XXX_Size() int {
	return xxx_messageInfo_IrreparableSegment.Size(m)
}
func (m *IrreparableSegment) XXX_DiscardUnknown() {
	xxx_messageInfo_IrreparableSegment.DiscardUnknown(m)
}

var xxx_messageInfo_IrreparableSegment proto.InternalMessageInfo

func (m *IrreparableSegment) GetPath() []byte {
	if m != nil {
		return m.Path
	}
	return nil
}

func (m *IrreparableSegment) GetSegmentDetail() *Pointer {
	if m != nil {
		return m.SegmentDetail
	}
	return nil
}

func (m *IrreparableSegment) GetLostPieces() int32 {
	if m != nil {
		return m.LostPieces
	}
	return 0
}

func (m *IrreparableSegment) GetLastRepairAttempt() int64 {
	if m != nil {
		return m.LastRepairAttempt
	}
	return 0
}

func (m *IrreparableSegment) GetRepairAttemptCount() int64 {
	if m != nil {
		return m.RepairAttemptCount
	}
	return 0
}

type ListIrreparableSegmentsResponse struct {
	Segments             []*IrreparableSegment `protobuf:"bytes,1,rep,name=segments,proto3" json:"segments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ListIrreparableSegmentsResponse) Reset()         { *m = ListIrreparableSegmentsResponse{} }
func (m *ListIrreparableSegmentsResponse) String() string { return proto.CompactTextString(m) }
func (*ListIrreparableSegmentsResponse) ProtoMessage()    {}
func (*ListIrreparableSegmentsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07d9034b2dd9d26, []int{2}
}
func (m *ListIrreparableSegmentsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListIrreparableSegmentsResponse.Unmarshal(m, b)
}
func (m *ListIrreparableSegmentsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListIrreparableSegmentsResponse.Marshal(b, m, deterministic)
}
func (m *ListIrreparableSegmentsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListIrreparableSegmentsResponse.Merge(m, src)
}
func (m *ListIrreparableSegmentsResponse) XXX_Size() int {
	return xxx_messageInfo_ListIrreparableSegmentsResponse.Size(m)
}
func (m *ListIrreparableSegmentsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListIrreparableSegmentsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListIrreparableSegmentsResponse proto.InternalMessageInfo

func (m *ListIrreparableSegmentsResponse) GetSegments() []*IrreparableSegment {
	if m != nil {
		return m.Segments
	}
	return nil
}

// GetStats
type GetStatsRequest struct {
	NodeId               NodeID   `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3,customtype=NodeID" json:"node_id"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetStatsRequest) Reset()         { *m = GetStatsRequest{} }
func (m *GetStatsRequest) String() string { return proto.CompactTextString(m) }
func (*GetStatsRequest) ProtoMessage()    {}
func (*GetStatsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07d9034b2dd9d26, []int{3}
}
func (m *GetStatsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetStatsRequest.Unmarshal(m, b)
}
func (m *GetStatsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetStatsRequest.Marshal(b, m, deterministic)
}
func (m *GetStatsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStatsRequest.Merge(m, src)
}
func (m *GetStatsRequest) XXX_Size() int {
	return xxx_messageInfo_GetStatsRequest.Size(m)
}
func (m *GetStatsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStatsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetStatsRequest proto.InternalMessageInfo

type GetStatsResponse struct {
	AuditCount           int64    `protobuf:"varint,1,opt,name=audit_count,json=auditCount,proto3" json:"audit_count,omitempty"`
	AuditRatio           float64  `protobuf:"fixed64,2,opt,name=audit_ratio,json=auditRatio,proto3" json:"audit_ratio,omitempty"`
	UptimeCount          int64    `protobuf:"varint,3,opt,name=uptime_count,json=uptimeCount,proto3" json:"uptime_count,omitempty"`
	UptimeRatio          float64  `protobuf:"fixed64,4,opt,name=uptime_ratio,json=uptimeRatio,proto3" json:"uptime_ratio,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetStatsResponse) Reset()         { *m = GetStatsResponse{} }
func (m *GetStatsResponse) String() string { return proto.CompactTextString(m) }
func (*GetStatsResponse) ProtoMessage()    {}
func (*GetStatsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07d9034b2dd9d26, []int{4}
}
func (m *GetStatsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetStatsResponse.Unmarshal(m, b)
}
func (m *GetStatsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetStatsResponse.Marshal(b, m, deterministic)
}
func (m *GetStatsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStatsResponse.Merge(m, src)
}
func (m *GetStatsResponse) XXX_Size() int {
	return xxx_messageInfo_GetStatsResponse.Size(m)
}
func (m *GetStatsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStatsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetStatsResponse proto.InternalMessageInfo

func (m *GetStatsResponse) GetAuditCount() int64 {
	if m != nil {
		return m.AuditCount
	}
	return 0
}

func (m *GetStatsResponse) GetAuditRatio() float64 {
	if m != nil {
		return m.AuditRatio
	}
	return 0
}

func (m *GetStatsResponse) GetUptimeCount() int64 {
	if m != nil {
		return m.UptimeCount
	}
	return 0
}

func (m *GetStatsResponse) GetUptimeRatio() float64 {
	if m != nil {
		return m.UptimeRatio
	}
	return 0
}

// CreateStats
type CreateStatsRequest struct {
	NodeId               NodeID   `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3,customtype=NodeID" json:"node_id"`
	AuditCount           int64    `protobuf:"varint,2,opt,name=audit_count,json=auditCount,proto3" json:"audit_count,omitempty"`
	AuditSuccessCount    int64    `protobuf:"varint,3,opt,name=audit_success_count,json=auditSuccessCount,proto3" json:"audit_success_count,omitempty"`
	UptimeCount          int64    `protobuf:"varint,4,opt,name=uptime_count,json=uptimeCount,proto3" json:"uptime_count,omitempty"`
	UptimeSuccessCount   int64    `protobuf:"varint,5,opt,name=uptime_success_count,json=uptimeSuccessCount,proto3" json:"uptime_success_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateStatsRequest) Reset()         { *m = CreateStatsRequest{} }
func (m *CreateStatsRequest) String() string { return proto.CompactTextString(m) }
func (*CreateStatsRequest) ProtoMessage()    {}
func (*CreateStatsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07d9034b2dd9d26, []int{5}
}
func (m *CreateStatsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateStatsRequest.Unmarshal(m, b)
}
func (m *CreateStatsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateStatsRequest.Marshal(b, m, deterministic)
}
func (m *CreateStatsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateStatsRequest.Merge(m, src)
}
func (m *CreateStatsRequest) XXX_Size() int {
	return xxx_messageInfo_CreateStatsRequest.Size(m)
}
func (m *CreateStatsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateStatsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateStatsRequest proto.InternalMessageInfo

func (m *CreateStatsRequest) GetAuditCount() int64 {
	if m != nil {
		return m.AuditCount
	}
	return 0
}

func (m *CreateStatsRequest) GetAuditSuccessCount() int64 {
	if m != nil {
		return m.AuditSuccessCount
	}
	return 0
}

func (m *CreateStatsRequest) GetUptimeCount() int64 {
	if m != nil {
		return m.UptimeCount
	}
	return 0
}

func (m *CreateStatsRequest) GetUptimeSuccessCount() int64 {
	if m != nil {
		return m.UptimeSuccessCount
	}
	return 0
}

type CreateStatsResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateStatsResponse) Reset()         { *m = CreateStatsResponse{} }
func (m *CreateStatsResponse) String() string { return proto.CompactTextString(m) }
func (*CreateStatsResponse) ProtoMessage()    {}
func (*CreateStatsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07d9034b2dd9d26, []int{6}
}
func (m *CreateStatsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateStatsResponse.Unmarshal(m, b)
}
func (m *CreateStatsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateStatsResponse.Marshal(b, m, deterministic)
}
func (m *CreateStatsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateStatsResponse.Merge(m, src)
}
func (m *CreateStatsResponse) XXX_Size() int {
	return xxx_messageInfo_CreateStatsResponse.Size(m)
}
func (m *CreateStatsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateStatsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateStatsResponse proto.InternalMessageInfo

// CountNodes
type CountNodesResponse struct {
	Count                int64    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountNodesResponse) Reset()         { *m = CountNodesResponse{} }
func (m *CountNodesResponse) String() string { return proto.CompactTextString(m) }
func (*CountNodesResponse) ProtoMessage()    {}
func (*CountNodesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07d9034b2dd9d26, []int{7}
}
func (m *CountNodesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountNodesResponse.Unmarshal(m, b)
}
func (m *CountNodesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountNodesResponse.Marshal(b, m, deterministic)
}
func (m *CountNodesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountNodesResponse.Merge(m, src)
}
func (m *CountNodesResponse) XXX_Size() int {
	return xxx_messageInfo_CountNodesResponse.Size(m)
}
func (m *CountNodesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CountNodesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CountNodesResponse proto.InternalMessageInfo

func (m *CountNodesResponse) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type CountNodesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountNodesRequest) Reset()         { *m = CountNodesRequest{} }
func (m *CountNodesRequest) String() string { return proto.CompactTextString(m) }
func (*CountNodesRequest) ProtoMessage()    {}
func (*CountNodesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07d9034b2dd9d26, []int{8}
}
func (m *CountNodesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountNodesRequest.Unmarshal(m, b)
}
func (m *CountNodesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountNodesRequest.Marshal(b, m, deterministic)
}
func (m *CountNodesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountNodesRequest.Merge(m, src)
}
func (m *CountNodesRequest) XXX_Size() int {
	return xxx_messageInfo_CountNodesRequest.Size(m)
}
func (m *CountNodesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CountNodesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CountNodesRequest proto.InternalMessageInfo

// GetBuckets
type GetBucketsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBucketsRequest) Reset()         { *m = GetBucketsRequest{} }
func (m *GetBucketsRequest) String() string { return proto.CompactTextString(m) }
func (*GetBucketsRequest) ProtoMessage()    {}
func (*GetBucketsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07d9034b2dd9d26, []int{9}
}
func (m *GetBucketsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBucketsRequest.Unmarshal(m, b)
}
func (m *GetBucketsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBucketsRequest.Marshal(b, m, deterministic)
}
func (m *GetBucketsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBucketsRequest.Merge(m, src)
}
func (m *GetBucketsRequest) XXX_Size() int {
	return xxx_messageInfo_GetBucketsRequest.Size(m)
}
func (m *GetBucketsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBucketsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBucketsRequest proto.InternalMessageInfo

type GetBucketsResponse struct {
	Total                int64    `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Ids                  []NodeID `protobuf:"bytes,2,rep,name=ids,proto3,customtype=NodeID" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBucketsResponse) Reset()         { *m = GetBucketsResponse{} }
func (m *GetBucketsResponse) String() string { return proto.CompactTextString(m) }
func (*GetBucketsResponse) ProtoMessage()    {}
func (*GetBucketsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07d9034b2dd9d26, []int{10}
}
func (m *GetBucketsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBucketsResponse.Unmarshal(m, b)
}
func (m *GetBucketsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBucketsResponse.Marshal(b, m, deterministic)
}
func (m *GetBucketsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBucketsResponse.Merge(m, src)
}
func (m *GetBucketsResponse) XXX_Size() int {
	return xxx_messageInfo_GetBucketsResponse.Size(m)
}
func (m *GetBucketsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBucketsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBucketsResponse proto.InternalMessageInfo

func (m *GetBucketsResponse) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

// GetBucket
type GetBucketRequest struct {
	Id                   NodeID   `protobuf:"bytes,1,opt,name=id,proto3,customtype=NodeID" json:"id"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBucketRequest) Reset()         { *m = GetBucketRequest{} }
func (m *GetBucketRequest) String() string { return proto.CompactTextString(m) }
func (*GetBucketRequest) ProtoMessage()    {}
func (*GetBucketRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07d9034b2dd9d26, []int{11}
}
func (m *GetBucketRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBucketRequest.Unmarshal(m, b)
}
func (m *GetBucketRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBucketRequest.Marshal(b, m, deterministic)
}
func (m *GetBucketRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBucketRequest.Merge(m, src)
}
func (m *GetBucketRequest) XXX_Size() int {
	return xxx_messageInfo_GetBucketRequest.Size(m)
}
func (m *GetBucketRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBucketRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBucketRequest proto.InternalMessageInfo

type GetBucketResponse struct {
	Id                   NodeID   `protobuf:"bytes,1,opt,name=id,proto3,customtype=NodeID" json:"id"`
	Nodes                []*Node  `protobuf:"bytes,2,rep,name=nodes,proto3" json:"nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBucketResponse) Reset()         { *m = GetBucketResponse{} }
func (m *GetBucketResponse) String() string { return proto.CompactTextString(m) }
func (*GetBucketResponse) ProtoMessage()    {}
func (*GetBucketResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07d9034b2dd9d26, []int{12}
}
func (m *GetBucketResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBucketResponse.Unmarshal(m, b)
}
func (m *GetBucketResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBucketResponse.Marshal(b, m, deterministic)
}
func (m *GetBucketResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBucketResponse.Merge(m, src)
}
func (m *GetBucketResponse) XXX_Size() int {
	return xxx_messageInfo_GetBucketResponse.Size(m)
}
func (m *GetBucketResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBucketResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBucketResponse proto.InternalMessageInfo

func (m *GetBucketResponse) GetNodes() []*Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type Bucket struct {
	Nodes                []*Node  `protobuf:"bytes,2,rep,name=nodes,proto3" json:"nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Bucket) Reset()         { *m = Bucket{} }
func (m *Bucket) String() string { return proto.CompactTextString(m) }
func (*Bucket) ProtoMessage()    {}
func (*Bucket) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07d9034b2dd9d26, []int{13}
}
func (m *Bucket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bucket.Unmarshal(m, b)
}
func (m *Bucket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bucket.Marshal(b, m, deterministic)
}
func (m *Bucket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bucket.Merge(m, src)
}
func (m *Bucket) XXX_Size() int {
	return xxx_messageInfo_Bucket.Size(m)
}
func (m *Bucket) XXX_DiscardUnknown() {
	xxx_messageInfo_Bucket.DiscardUnknown(m)
}

var xxx_messageInfo_Bucket proto.InternalMessageInfo

func (m *Bucket) GetNodes() []*Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type BucketList struct {
	Nodes                []*Node  `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BucketList) Reset()         { *m = BucketList{} }
func (m *BucketList) String() string { return proto.CompactTextString(m) }
func (*BucketList) ProtoMessage()    {}
func (*BucketList) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07d9034b2dd9d26, []int{14}
}
func (m *BucketList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BucketList.Unmarshal(m, b)
}
func (m *BucketList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BucketList.Marshal(b, m, deterministic)
}
func (m *BucketList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BucketList.Merge(m, src)
}
func (m *BucketList) XXX_Size() int {
	return xxx_messageInfo_BucketList.Size(m)
}
func (m *BucketList) XXX_DiscardUnknown() {
	xxx_messageInfo_BucketList.DiscardUnknown(m)
}

var xxx_messageInfo_BucketList proto.InternalMessageInfo

func (m *BucketList) GetNodes() []*Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

// PingNode
type PingNodeRequest struct {
	Id                   NodeID   `protobuf:"bytes,1,opt,name=id,proto3,customtype=NodeID" json:"id"`
	Address              string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingNodeRequest) Reset()         { *m = PingNodeRequest{} }
func (m *PingNodeRequest) String() string { return proto.CompactTextString(m) }
func (*PingNodeRequest) ProtoMessage()    {}
func (*PingNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07d9034b2dd9d26, []int{15}
}
func (m *PingNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingNodeRequest.Unmarshal(m, b)
}
func (m *PingNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingNodeRequest.Marshal(b, m, deterministic)
}
func (m *PingNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingNodeRequest.Merge(m, src)
}
func (m *PingNodeRequest) XXX_Size() int {
	return xxx_messageInfo_PingNodeRequest.Size(m)
}
func (m *PingNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PingNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PingNodeRequest proto.InternalMessageInfo

func (m *PingNodeRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type PingNodeResponse struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingNodeResponse) Reset()         { *m = PingNodeResponse{} }
func (m *PingNodeResponse) String() string { return proto.CompactTextString(m) }
func (*PingNodeResponse) ProtoMessage()    {}
func (*PingNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07d9034b2dd9d26, []int{16}
}
func (m *PingNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingNodeResponse.Unmarshal(m, b)
}
func (m *PingNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingNodeResponse.Marshal(b, m, deterministic)
}
func (m *PingNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingNodeResponse.Merge(m, src)
}
func (m *PingNodeResponse) XXX_Size() int {
	return xxx_messageInfo_PingNodeResponse.Size(m)
}
func (m *PingNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PingNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PingNodeResponse proto.InternalMessageInfo

func (m *PingNodeResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type LookupNodeRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LookupNodeRequest) Reset()         { *m = LookupNodeRequest{} }
func (m *LookupNodeRequest) String() string { return proto.CompactTextString(m) }
func (*LookupNodeRequest) ProtoMessage()    {}
func (*LookupNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07d9034b2dd9d26, []int{17}
}
func (m *LookupNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupNodeRequest.Unmarshal(m, b)
}
func (m *LookupNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupNodeRequest.Marshal(b, m, deterministic)
}
func (m *LookupNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupNodeRequest.Merge(m, src)
}
func (m *LookupNodeRequest) XXX_Size() int {
	return xxx_messageInfo_LookupNodeRequest.Size(m)
}
func (m *LookupNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LookupNodeRequest proto.InternalMessageInfo

func (m *LookupNodeRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *LookupNodeRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type LookupNodeResponse struct {
	Node                 *Node         `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	Meta                 *NodeMetadata `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *LookupNodeResponse) Reset()         { *m = LookupNodeResponse{} }
func (m *LookupNodeResponse) String() string { return proto.CompactTextString(m) }
func (*LookupNodeResponse) ProtoMessage()    {}
func (*LookupNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07d9034b2dd9d26, []int{18}
}
func (m *LookupNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupNodeResponse.Unmarshal(m, b)
}
func (m *LookupNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupNodeResponse.Marshal(b, m, deterministic)
}
func (m *LookupNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupNodeResponse.Merge(m, src)
}
func (m *LookupNodeResponse) XXX_Size() int {
	return xxx_messageInfo_LookupNodeResponse.Size(m)
}
func (m *LookupNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LookupNodeResponse proto.InternalMessageInfo

func (m *LookupNodeResponse) GetNode() *Node {
	if m != nil {
		return m.Node
	}
	return nil
}

func (m *LookupNodeResponse) GetMeta() *NodeMetadata {
	if m != nil {
		return m.Meta
	}
	return nil
}

type NodeInfoRequest struct {
	Id                   NodeID       `protobuf:"bytes,1,opt,name=id,proto3,customtype=NodeID" json:"id"`
	Address              *NodeAddress `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *NodeInfoRequest) Reset()         { *m = NodeInfoRequest{} }
func (m *NodeInfoRequest) String() string { return proto.CompactTextString(m) }
func (*NodeInfoRequest) ProtoMessage()    {}
func (*NodeInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07d9034b2dd9d26, []int{19}
}
func (m *NodeInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeInfoRequest.Unmarshal(m, b)
}
func (m *NodeInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeInfoRequest.Marshal(b, m, deterministic)
}
func (m *NodeInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeInfoRequest.Merge(m, src)
}
func (m *NodeInfoRequest) XXX_Size() int {
	return xxx_messageInfo_NodeInfoRequest.Size(m)
}
func (m *NodeInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NodeInfoRequest proto.InternalMessageInfo

func (m *NodeInfoRequest) GetAddress() *NodeAddress {
	if m != nil {
		return m.Address
	}
	return nil
}

type NodeInfoResponse struct {
	Type                 NodeType      `protobuf:"varint,1,opt,name=type,proto3,enum=node.NodeType" json:"type,omitempty"`
	Operator             *NodeOperator `protobuf:"bytes,2,opt,name=operator,proto3" json:"operator,omitempty"`
	Capacity             *NodeCapacity `protobuf:"bytes,3,opt,name=capacity,proto3" json:"capacity,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *NodeInfoResponse) Reset()         { *m = NodeInfoResponse{} }
func (m *NodeInfoResponse) String() string { return proto.CompactTextString(m) }
func (*NodeInfoResponse) ProtoMessage()    {}
func (*NodeInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07d9034b2dd9d26, []int{20}
}
func (m *NodeInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeInfoResponse.Unmarshal(m, b)
}
func (m *NodeInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeInfoResponse.Marshal(b, m, deterministic)
}
func (m *NodeInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeInfoResponse.Merge(m, src)
}
func (m *NodeInfoResponse) XXX_Size() int {
	return xxx_messageInfo_NodeInfoResponse.Size(m)
}
func (m *NodeInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NodeInfoResponse proto.InternalMessageInfo

func (m *NodeInfoResponse) GetType() NodeType {
	if m != nil {
		return m.Type
	}
	return NodeType_INVALID
}

func (m *NodeInfoResponse) GetOperator() *NodeOperator {
	if m != nil {
		return m.Operator
	}
	return nil
}

func (m *NodeInfoResponse) GetCapacity() *NodeCapacity {
	if m != nil {
		return m.Capacity
	}
	return nil
}

type FindNearRequest struct {
	Id                   NodeID   `protobuf:"bytes,1,opt,name=id,proto3,customtype=NodeID" json:"id"`
	Start                NodeID   `protobuf:"bytes,2,opt,name=start,proto3,customtype=NodeID" json:"start"`
	Limit                int64    `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindNearRequest) Reset()         { *m = FindNearRequest{} }
func (m *FindNearRequest) String() string { return proto.CompactTextString(m) }
func (*FindNearRequest) ProtoMessage()    {}
func (*FindNearRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07d9034b2dd9d26, []int{21}
}
func (m *FindNearRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindNearRequest.Unmarshal(m, b)
}
func (m *FindNearRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindNearRequest.Marshal(b, m, deterministic)
}
func (m *FindNearRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindNearRequest.Merge(m, src)
}
func (m *FindNearRequest) XXX_Size() int {
	return xxx_messageInfo_FindNearRequest.Size(m)
}
func (m *FindNearRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindNearRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindNearRequest proto.InternalMessageInfo

func (m *FindNearRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type FindNearResponse struct {
	Nodes                []*Node  `protobuf:"bytes,2,rep,name=nodes,proto3" json:"nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindNearResponse) Reset()         { *m = FindNearResponse{} }
func (m *FindNearResponse) String() string { return proto.CompactTextString(m) }
func (*FindNearResponse) ProtoMessage()    {}
func (*FindNearResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07d9034b2dd9d26, []int{22}
}
func (m *FindNearResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindNearResponse.Unmarshal(m, b)
}
func (m *FindNearResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindNearResponse.Marshal(b, m, deterministic)
}
func (m *FindNearResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindNearResponse.Merge(m, src)
}
func (m *FindNearResponse) XXX_Size() int {
	return xxx_messageInfo_FindNearResponse.Size(m)
}
func (m *FindNearResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FindNearResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FindNearResponse proto.InternalMessageInfo

func (m *FindNearResponse) GetNodes() []*Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type DumpNodesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DumpNodesRequest) Reset()         { *m = DumpNodesRequest{} }
func (m *DumpNodesRequest) String() string { return proto.CompactTextString(m) }
func (*DumpNodesRequest) ProtoMessage()    {}
func (*DumpNodesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07d9034b2dd9d26, []int{23}
}
func (m *DumpNodesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DumpNodesRequest.Unmarshal(m, b)
}
func (m *DumpNodesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DumpNodesRequest.Marshal(b, m, deterministic)
}
func (m *DumpNodesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DumpNodesRequest.Merge(m, src)
}
func (m *DumpNodesRequest) XXX_Size() int {
	return xxx_messageInfo_DumpNodesRequest.Size(m)
}
func (m *DumpNodesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DumpNodesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DumpNodesRequest proto.InternalMessageInfo

type DumpNodesResponse struct {
	Nodes                []*Node  `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DumpNodesResponse) Reset()         { *m = DumpNodesResponse{} }
func (m *DumpNodesResponse) String() string { return proto.CompactTextString(m) }
func (*DumpNodesResponse) ProtoMessage()    {}
func (*DumpNodesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07d9034b2dd9d26, []int{24}
}
func (m *DumpNodesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DumpNodesResponse.Unmarshal(m, b)
}
func (m *DumpNodesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DumpNodesResponse.Marshal(b, m, deterministic)
}
func (m *DumpNodesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DumpNodesResponse.Merge(m, src)
}
func (m *DumpNodesResponse) XXX_Size() int {
	return xxx_messageInfo_DumpNodesResponse.Size(m)
}
func (m *DumpNodesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DumpNodesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DumpNodesResponse proto.InternalMessageInfo

func (m *DumpNodesResponse) GetNodes() []*Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type StatsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatsRequest) Reset()         { *m = StatsRequest{} }
func (m *StatsRequest) String() string { return proto.CompactTextString(m) }
func (*StatsRequest) ProtoMessage()    {}
func (*StatsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07d9034b2dd9d26, []int{25}
}
func (m *StatsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatsRequest.Unmarshal(m, b)
}
func (m *StatsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatsRequest.Marshal(b, m, deterministic)
}
func (m *StatsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatsRequest.Merge(m, src)
}
func (m *StatsRequest) XXX_Size() int {
	return xxx_messageInfo_StatsRequest.Size(m)
}
func (m *StatsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StatsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StatsRequest proto.InternalMessageInfo

type StatSummaryResponse struct {
	UsedSpace            int64    `protobuf:"varint,1,opt,name=used_space,json=usedSpace,proto3" json:"used_space,omitempty"`
	AvailableSpace       int64    `protobuf:"varint,2,opt,name=available_space,json=availableSpace,proto3" json:"available_space,omitempty"`
	UsedIngress          int64    `protobuf:"varint,3,opt,name=used_ingress,json=usedIngress,proto3" json:"used_ingress,omitempty"`
	UsedEgress           int64    `protobuf:"varint,4,opt,name=used_egress,json=usedEgress,proto3" json:"used_egress,omitempty"`
	UsedBandwidth        int64    `protobuf:"varint,5,opt,name=used_bandwidth,json=usedBandwidth,proto3" json:"used_bandwidth,omitempty"`
	AvailableBandwidth   int64    `protobuf:"varint,6,opt,name=available_bandwidth,json=availableBandwidth,proto3" json:"available_bandwidth,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatSummaryResponse) Reset()         { *m = StatSummaryResponse{} }
func (m *StatSummaryResponse) String() string { return proto.CompactTextString(m) }
func (*StatSummaryResponse) ProtoMessage()    {}
func (*StatSummaryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07d9034b2dd9d26, []int{26}
}
func (m *StatSummaryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatSummaryResponse.Unmarshal(m, b)
}
func (m *StatSummaryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatSummaryResponse.Marshal(b, m, deterministic)
}
func (m *StatSummaryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatSummaryResponse.Merge(m, src)
}
func (m *StatSummaryResponse) XXX_Size() int {
	return xxx_messageInfo_StatSummaryResponse.Size(m)
}
func (m *StatSummaryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StatSummaryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StatSummaryResponse proto.InternalMessageInfo

func (m *StatSummaryResponse) GetUsedSpace() int64 {
	if m != nil {
		return m.UsedSpace
	}
	return 0
}

func (m *StatSummaryResponse) GetAvailableSpace() int64 {
	if m != nil {
		return m.AvailableSpace
	}
	return 0
}

func (m *StatSummaryResponse) GetUsedIngress() int64 {
	if m != nil {
		return m.UsedIngress
	}
	return 0
}

func (m *StatSummaryResponse) GetUsedEgress() int64 {
	if m != nil {
		return m.UsedEgress
	}
	return 0
}

func (m *StatSummaryResponse) GetUsedBandwidth() int64 {
	if m != nil {
		return m.UsedBandwidth
	}
	return 0
}

func (m *StatSummaryResponse) GetAvailableBandwidth() int64 {
	if m != nil {
		return m.AvailableBandwidth
	}
	return 0
}

type DashboardRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DashboardRequest) Reset()         { *m = DashboardRequest{} }
func (m *DashboardRequest) String() string { return proto.CompactTextString(m) }
func (*DashboardRequest) ProtoMessage()    {}
func (*DashboardRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07d9034b2dd9d26, []int{27}
}
func (m *DashboardRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DashboardRequest.Unmarshal(m, b)
}
func (m *DashboardRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DashboardRequest.Marshal(b, m, deterministic)
}
func (m *DashboardRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DashboardRequest.Merge(m, src)
}
func (m *DashboardRequest) XXX_Size() int {
	return xxx_messageInfo_DashboardRequest.Size(m)
}
func (m *DashboardRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DashboardRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DashboardRequest proto.InternalMessageInfo

type DashboardResponse struct {
	NodeId               NodeID               `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3,customtype=NodeID" json:"node_id"`
	NodeConnections      int64                `protobuf:"varint,2,opt,name=node_connections,json=nodeConnections,proto3" json:"node_connections,omitempty"`
	BootstrapAddress     string               `protobuf:"bytes,3,opt,name=bootstrap_address,json=bootstrapAddress,proto3" json:"bootstrap_address,omitempty"`
	InternalAddress      string               `protobuf:"bytes,4,opt,name=internal_address,json=internalAddress,proto3" json:"internal_address,omitempty"`
	ExternalAddress      string               `protobuf:"bytes,5,opt,name=external_address,json=externalAddress,proto3" json:"external_address,omitempty"`
	Stats                *StatSummaryResponse `protobuf:"bytes,6,opt,name=stats,proto3" json:"stats,omitempty"`
	Uptime               *duration.Duration   `protobuf:"bytes,7,opt,name=uptime,proto3" json:"uptime,omitempty"`
	LastPinged           *timestamp.Timestamp `protobuf:"bytes,8,opt,name=last_pinged,json=lastPinged,proto3" json:"last_pinged,omitempty"`
	LastQueried          *timestamp.Timestamp `protobuf:"bytes,9,opt,name=last_queried,json=lastQueried,proto3" json:"last_queried,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *DashboardResponse) Reset()         { *m = DashboardResponse{} }
func (m *DashboardResponse) String() string { return proto.CompactTextString(m) }
func (*DashboardResponse) ProtoMessage()    {}
func (*DashboardResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07d9034b2dd9d26, []int{28}
}
func (m *DashboardResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DashboardResponse.Unmarshal(m, b)
}
func (m *DashboardResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DashboardResponse.Marshal(b, m, deterministic)
}
func (m *DashboardResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DashboardResponse.Merge(m, src)
}
func (m *DashboardResponse) XXX_Size() int {
	return xxx_messageInfo_DashboardResponse.Size(m)
}
func (m *DashboardResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DashboardResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DashboardResponse proto.InternalMessageInfo

func (m *DashboardResponse) GetNodeConnections() int64 {
	if m != nil {
		return m.NodeConnections
	}
	return 0
}

func (m *DashboardResponse) GetBootstrapAddress() string {
	if m != nil {
		return m.BootstrapAddress
	}
	return ""
}

func (m *DashboardResponse) GetInternalAddress() string {
	if m != nil {
		return m.InternalAddress
	}
	return ""
}

func (m *DashboardResponse) GetExternalAddress() string {
	if m != nil {
		return m.ExternalAddress
	}
	return ""
}

func (m *DashboardResponse) GetStats() *StatSummaryResponse {
	if m != nil {
		return m.Stats
	}
	return nil
}

func (m *DashboardResponse) GetUptime() *duration.Duration {
	if m != nil {
		return m.Uptime
	}
	return nil
}

func (m *DashboardResponse) GetLastPinged() *timestamp.Timestamp {
	if m != nil {
		return m.LastPinged
	}
	return nil
}

func (m *DashboardResponse) GetLastQueried() *timestamp.Timestamp {
	if m != nil {
		return m.LastQueried
	}
	return nil
}

type SegmentHealthRequest struct {
	Bucket               []byte   `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	EncryptedPath        []byte   `protobuf:"bytes,2,opt,name=encrypted_path,json=encryptedPath,proto3" json:"encrypted_path,omitempty"`
	SegmentIndex         int64    `protobuf:"varint,3,opt,name=segment_index,json=segmentIndex,proto3" json:"segment_index,omitempty"`
	ProjectId            []byte   `protobuf:"bytes,4,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SegmentHealthRequest) Reset()         { *m = SegmentHealthRequest{} }
func (m *SegmentHealthRequest) String() string { return proto.CompactTextString(m) }
func (*SegmentHealthRequest) ProtoMessage()    {}
func (*SegmentHealthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07d9034b2dd9d26, []int{29}
}
func (m *SegmentHealthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentHealthRequest.Unmarshal(m, b)
}
func (m *SegmentHealthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentHealthRequest.Marshal(b, m, deterministic)
}
func (m *SegmentHealthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentHealthRequest.Merge(m, src)
}
func (m *SegmentHealthRequest) XXX_Size() int {
	return xxx_messageInfo_SegmentHealthRequest.Size(m)
}
func (m *SegmentHealthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentHealthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentHealthRequest proto.InternalMessageInfo

func (m *SegmentHealthRequest) GetBucket() []byte {
	if m != nil {
		return m.Bucket
	}
	return nil
}

func (m *SegmentHealthRequest) GetEncryptedPath() []byte {
	if m != nil {
		return m.EncryptedPath
	}
	return nil
}

func (m *SegmentHealthRequest) GetSegmentIndex() int64 {
	if m != nil {
		return m.SegmentIndex
	}
	return 0
}

func (m *SegmentHealthRequest) GetProjectId() []byte {
	if m != nil {
		return m.ProjectId
	}
	return nil
}

type SegmentHealth struct {
	MinimumRequired      int32    `protobuf:"varint,1,opt,name=minimum_required,json=minimumRequired,proto3" json:"minimum_required,omitempty"`
	Total                int32    `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	RepairThreshold      int32    `protobuf:"varint,3,opt,name=repair_threshold,json=repairThreshold,proto3" json:"repair_threshold,omitempty"`
	SuccessThreshold     int32    `protobuf:"varint,4,opt,name=success_threshold,json=successThreshold,proto3" json:"success_threshold,omitempty"`
	OnlineNodes          int32    `protobuf:"varint,5,opt,name=online_nodes,json=onlineNodes,proto3" json:"online_nodes,omitempty"`
	Segment              []byte   `protobuf:"bytes,6,opt,name=segment,proto3" json:"segment,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SegmentHealth) Reset()         { *m = SegmentHealth{} }
func (m *SegmentHealth) String() string { return proto.CompactTextString(m) }
func (*SegmentHealth) ProtoMessage()    {}
func (*SegmentHealth) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07d9034b2dd9d26, []int{30}
}
func (m *SegmentHealth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentHealth.Unmarshal(m, b)
}
func (m *SegmentHealth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentHealth.Marshal(b, m, deterministic)
}
func (m *SegmentHealth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentHealth.Merge(m, src)
}
func (m *SegmentHealth) XXX_Size() int {
	return xxx_messageInfo_SegmentHealth.Size(m)
}
func (m *SegmentHealth) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentHealth.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentHealth proto.InternalMessageInfo

func (m *SegmentHealth) GetMinimumRequired() int32 {
	if m != nil {
		return m.MinimumRequired
	}
	return 0
}

func (m *SegmentHealth) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *SegmentHealth) GetRepairThreshold() int32 {
	if m != nil {
		return m.RepairThreshold
	}
	return 0
}

func (m *SegmentHealth) GetSuccessThreshold() int32 {
	if m != nil {
		return m.SuccessThreshold
	}
	return 0
}

func (m *SegmentHealth) GetOnlineNodes() int32 {
	if m != nil {
		return m.OnlineNodes
	}
	return 0
}

func (m *SegmentHealth) GetSegment() []byte {
	if m != nil {
		return m.Segment
	}
	return nil
}

type SegmentHealthResponse struct {
	Health               *SegmentHealth    `protobuf:"bytes,1,opt,name=health,proto3" json:"health,omitempty"`
	Redundancy           *RedundancyScheme `protobuf:"bytes,2,opt,name=redundancy,proto3" json:"redundancy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SegmentHealthResponse) Reset()         { *m = SegmentHealthResponse{} }
func (m *SegmentHealthResponse) String() string { return proto.CompactTextString(m) }
func (*SegmentHealthResponse) ProtoMessage()    {}
func (*SegmentHealthResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07d9034b2dd9d26, []int{31}
}
func (m *SegmentHealthResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentHealthResponse.Unmarshal(m, b)
}
func (m *SegmentHealthResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentHealthResponse.Marshal(b, m, deterministic)
}
func (m *SegmentHealthResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentHealthResponse.Merge(m, src)
}
func (m *SegmentHealthResponse) XXX_Size() int {
	return xxx_messageInfo_SegmentHealthResponse.Size(m)
}
func (m *SegmentHealthResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentHealthResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentHealthResponse proto.InternalMessageInfo

func (m *SegmentHealthResponse) GetHealth() *SegmentHealth {
	if m != nil {
		return m.Health
	}
	return nil
}

func (m *SegmentHealthResponse) GetRedundancy() *RedundancyScheme {
	if m != nil {
		return m.Redundancy
	}
	return nil
}

type ObjectHealthRequest struct {
	EncryptedPath        []byte   `protobuf:"bytes,1,opt,name=encrypted_path,json=encryptedPath,proto3" json:"encrypted_path,omitempty"`
	Bucket               []byte   `protobuf:"bytes,2,opt,name=bucket,proto3" json:"bucket,omitempty"`
	ProjectId            []byte   `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	StartAfterSegment    int64    `protobuf:"varint,4,opt,name=start_after_segment,json=startAfterSegment,proto3" json:"start_after_segment,omitempty"`
	EndBeforeSegment     int64    `protobuf:"varint,5,opt,name=end_before_segment,json=endBeforeSegment,proto3" json:"end_before_segment,omitempty"`
	Limit                int32    `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ObjectHealthRequest) Reset()         { *m = ObjectHealthRequest{} }
func (m *ObjectHealthRequest) String() string { return proto.CompactTextString(m) }
func (*ObjectHealthRequest) ProtoMessage()    {}
func (*ObjectHealthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07d9034b2dd9d26, []int{32}
}
func (m *ObjectHealthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObjectHealthRequest.Unmarshal(m, b)
}
func (m *ObjectHealthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObjectHealthRequest.Marshal(b, m, deterministic)
}
func (m *ObjectHealthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObjectHealthRequest.Merge(m, src)
}
func (m *ObjectHealthRequest) XXX_Size() int {
	return xxx_messageInfo_ObjectHealthRequest.Size(m)
}
func (m *ObjectHealthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ObjectHealthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ObjectHealthRequest proto.InternalMessageInfo

func (m *ObjectHealthRequest) GetEncryptedPath() []byte {
	if m != nil {
		return m.EncryptedPath
	}
	return nil
}

func (m *ObjectHealthRequest) GetBucket() []byte {
	if m != nil {
		return m.Bucket
	}
	return nil
}

func (m *ObjectHealthRequest) GetProjectId() []byte {
	if m != nil {
		return m.ProjectId
	}
	return nil
}

func (m *ObjectHealthRequest) GetStartAfterSegment() int64 {
	if m != nil {
		return m.StartAfterSegment
	}
	return 0
}

func (m *ObjectHealthRequest) GetEndBeforeSegment() int64 {
	if m != nil {
		return m.EndBeforeSegment
	}
	return 0
}

func (m *ObjectHealthRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type ObjectHealthResponse struct {
	Segments             []*SegmentHealth  `protobuf:"bytes,1,rep,name=segments,proto3" json:"segments,omitempty"`
	Redundancy           *RedundancyScheme `protobuf:"bytes,2,opt,name=redundancy,proto3" json:"redundancy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ObjectHealthResponse) Reset()         { *m = ObjectHealthResponse{} }
func (m *ObjectHealthResponse) String() string { return proto.CompactTextString(m) }
func (*ObjectHealthResponse) ProtoMessage()    {}
func (*ObjectHealthResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a07d9034b2dd9d26, []int{33}
}
func (m *ObjectHealthResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObjectHealthResponse.Unmarshal(m, b)
}
func (m *ObjectHealthResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObjectHealthResponse.Marshal(b, m, deterministic)
}
func (m *ObjectHealthResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObjectHealthResponse.Merge(m, src)
}
func (m *ObjectHealthResponse) XXX_Size() int {
	return xxx_messageInfo_ObjectHealthResponse.Size(m)
}
func (m *ObjectHealthResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ObjectHealthResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ObjectHealthResponse proto.InternalMessageInfo

func (m *ObjectHealthResponse) GetSegments() []*SegmentHealth {
	if m != nil {
		return m.Segments
	}
	return nil
}

func (m *ObjectHealthResponse) GetRedundancy() *RedundancyScheme {
	if m != nil {
		return m.Redundancy
	}
	return nil
}

func init() {
	proto.RegisterType((*ListIrreparableSegmentsRequest)(nil), "inspector.ListIrreparableSegmentsRequest")
	proto.RegisterType((*IrreparableSegment)(nil), "inspector.IrreparableSegment")
	proto.RegisterType((*ListIrreparableSegmentsResponse)(nil), "inspector.ListIrreparableSegmentsResponse")
	proto.RegisterType((*GetStatsRequest)(nil), "inspector.GetStatsRequest")
	proto.RegisterType((*GetStatsResponse)(nil), "inspector.GetStatsResponse")
	proto.RegisterType((*CreateStatsRequest)(nil), "inspector.CreateStatsRequest")
	proto.RegisterType((*CreateStatsResponse)(nil), "inspector.CreateStatsResponse")
	proto.RegisterType((*CountNodesResponse)(nil), "inspector.CountNodesResponse")
	proto.RegisterType((*CountNodesRequest)(nil), "inspector.CountNodesRequest")
	proto.RegisterType((*GetBucketsRequest)(nil), "inspector.GetBucketsRequest")
	proto.RegisterType((*GetBucketsResponse)(nil), "inspector.GetBucketsResponse")
	proto.RegisterType((*GetBucketRequest)(nil), "inspector.GetBucketRequest")
	proto.RegisterType((*GetBucketResponse)(nil), "inspector.GetBucketResponse")
	proto.RegisterType((*Bucket)(nil), "inspector.Bucket")
	proto.RegisterType((*BucketList)(nil), "inspector.BucketList")
	proto.RegisterType((*PingNodeRequest)(nil), "inspector.PingNodeRequest")
	proto.RegisterType((*PingNodeResponse)(nil), "inspector.PingNodeResponse")
	proto.RegisterType((*LookupNodeRequest)(nil), "inspector.LookupNodeRequest")
	proto.RegisterType((*LookupNodeResponse)(nil), "inspector.LookupNodeResponse")
	proto.RegisterType((*NodeInfoRequest)(nil), "inspector.NodeInfoRequest")
	proto.RegisterType((*NodeInfoResponse)(nil), "inspector.NodeInfoResponse")
	proto.RegisterType((*FindNearRequest)(nil), "inspector.FindNearRequest")
	proto.RegisterType((*FindNearResponse)(nil), "inspector.FindNearResponse")
	proto.RegisterType((*DumpNodesRequest)(nil), "inspector.DumpNodesRequest")
	proto.RegisterType((*DumpNodesResponse)(nil), "inspector.DumpNodesResponse")
	proto.RegisterType((*StatsRequest)(nil), "inspector.StatsRequest")
	proto.RegisterType((*StatSummaryResponse)(nil), "inspector.StatSummaryResponse")
	proto.RegisterType((*DashboardRequest)(nil), "inspector.DashboardRequest")
	proto.RegisterType((*DashboardResponse)(nil), "inspector.DashboardResponse")
	proto.RegisterType((*SegmentHealthRequest)(nil), "inspector.SegmentHealthRequest")
	proto.RegisterType((*SegmentHealth)(nil), "inspector.SegmentHealth")
	proto.RegisterType((*SegmentHealthResponse)(nil), "inspector.SegmentHealthResponse")
	proto.RegisterType((*ObjectHealthRequest)(nil), "inspector.ObjectHealthRequest")
	proto.RegisterType((*ObjectHealthResponse)(nil), "inspector.ObjectHealthResponse")
}

func init() { proto.RegisterFile("inspector.proto", fileDescriptor_a07d9034b2dd9d26) }

var fileDescriptor_a07d9034b2dd9d26 = []byte{
	// 1735 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x58, 0x4d, 0x73, 0x1b, 0x4d,
	0x11, 0xce, 0xea, 0x2b, 0x56, 0x4b, 0xd6, 0xc7, 0xc8, 0xef, 0xfb, 0x0a, 0x25, 0xb1, 0x9c, 0xe5,
	0x23, 0x4e, 0x42, 0x29, 0x41, 0x84, 0x43, 0x48, 0xe5, 0x10, 0xdb, 0x24, 0x51, 0x25, 0x24, 0xce,
	0xda, 0x5c, 0xa8, 0x14, 0xaa, 0x91, 0x76, 0x2c, 0x2d, 0x96, 0x76, 0x36, 0xbb, 0xb3, 0x21, 0xfe,
	0x03, 0x14, 0xfc, 0x01, 0xaa, 0xe0, 0xca, 0x9f, 0xa0, 0xe0, 0x0f, 0x70, 0xe3, 0xce, 0x21, 0x17,
	0x0a, 0xf8, 0x0d, 0xdc, 0xa8, 0xe9, 0x99, 0xfd, 0x94, 0x84, 0x5d, 0xc0, 0x7b, 0xd3, 0x3e, 0xfd,
	0x4c, 0x6f, 0x77, 0x4f, 0x6f, 0xcf, 0x33, 0x82, 0xa6, 0xe3, 0x06, 0x1e, 0x9b, 0x0a, 0xee, 0x0f,
	0x3c, 0x9f, 0x0b, 0x4e, 0xaa, 0x31, 0xd0, 0x83, 0x19, 0x9f, 0x71, 0x05, 0xf7, 0xc0, 0xe5, 0x36,
	0xd3, 0xbf, 0x9b, 0x1e, 0x77, 0x5c, 0xc1, 0x7c, 0x7b, 0xa2, 0x81, 0xdd, 0x19, 0xe7, 0xb3, 0x05,
	0x7b, 0x80, 0x4f, 0x93, 0xf0, 0xec, 0x81, 0x1d, 0xfa, 0x54, 0x38, 0xdc, 0xd5, 0xf6, 0x7e, 0xde,
	0x2e, 0x9c, 0x25, 0x0b, 0x04, 0x5d, 0x7a, 0x8a, 0x60, 0xbe, 0x81, 0xdd, 0xd7, 0x4e, 0x20, 0x46,
	0xbe, 0xcf, 0x3c, 0xea, 0xd3, 0xc9, 0x82, 0x9d, 0xb0, 0xd9, 0x92, 0xb9, 0x22, 0xb0, 0xd8, 0x87,
	0x90, 0x05, 0x82, 0xec, 0x40, 0x79, 0xe1, 0x2c, 0x1d, 0xd1, 0x35, 0xf6, 0x8c, 0xfd, 0xb2, 0xa5,
	0x1e, 0xc8, 0x97, 0x50, 0xe1, 0x67, 0x67, 0x01, 0x13, 0xdd, 0x02, 0xc2, 0xfa, 0xc9, 0xfc, 0x87,
	0x01, 0x64, 0xd5, 0x19, 0x21, 0x50, 0xf2, 0xa8, 0x98, 0xa3, 0x8f, 0xba, 0x85, 0xbf, 0xc9, 0x63,
	0x68, 0x04, 0xca, 0x3c, 0xb6, 0x99, 0xa0, 0xce, 0x02, 0x5d, 0xd5, 0x86, 0x64, 0x90, 0x64, 0x79,
	0xac, 0x7e, 0x59, 0xdb, 0x9a, 0x79, 0x84, 0x44, 0xd2, 0x87, 0xda, 0x82, 0x07, 0x62, 0xec, 0x39,
	0x6c, 0xca, 0x82, 0x6e, 0x11, 0x43, 0x00, 0x09, 0x1d, 0x23, 0x42, 0x06, 0xd0, 0x59, 0xd0, 0x40,
	0x8c, 0x65, 0x20, 0x8e, 0x3f, 0xa6, 0x42, 0xb0, 0xa5, 0x27, 0xba, 0xa5, 0x3d, 0x63, 0xbf, 0x68,
	0xb5, 0xa5, 0xc9, 0x42, 0xcb, 0x33, 0x65, 0x20, 0x0f, 0x61, 0x27, 0x4b, 0x1d, 0x4f, 0x79, 0xe8,
	0x8a, 0x6e, 0x19, 0x17, 0x10, 0x3f, 0x4d, 0x3e, 0x94, 0x16, 0xf3, 0x3d, 0xf4, 0x37, 0x16, 0x2e,
	0xf0, 0xb8, 0x1b, 0x30, 0xf2, 0x18, 0xb6, 0x74, 0xd8, 0x41, 0xd7, 0xd8, 0x2b, 0xee, 0xd7, 0x86,
	0xb7, 0x06, 0xc9, 0xa6, 0xaf, 0xae, 0xb4, 0x62, 0xba, 0xf9, 0x43, 0x68, 0xbe, 0x60, 0xe2, 0x44,
	0xd0, 0x64, 0x1f, 0xee, 0xc0, 0x75, 0xd9, 0x09, 0x63, 0xc7, 0x56, 0x55, 0x3c, 0x68, 0xfc, 0xf9,
	0x73, 0xff, 0xda, 0x5f, 0x3f, 0xf7, 0x2b, 0x6f, 0xb8, 0xcd, 0x46, 0x47, 0x56, 0x45, 0x9a, 0x47,
	0xb6, 0xf9, 0x3b, 0x03, 0x5a, 0xc9, 0x62, 0x1d, 0x4b, 0x1f, 0x6a, 0x34, 0xb4, 0x9d, 0x28, 0x2f,
	0x03, 0xf3, 0x02, 0x84, 0x30, 0x9f, 0x84, 0x80, 0xfd, 0x83, 0x5b, 0x61, 0x68, 0x82, 0x25, 0x11,
	0x72, 0x1b, 0xea, 0xa1, 0x27, 0xdb, 0x47, 0xbb, 0x28, 0xa2, 0x8b, 0x9a, 0xc2, 0x94, 0x8f, 0x84,
	0xa2, 0x9c, 0x94, 0xd0, 0x89, 0xa6, 0xa0, 0x17, 0xf3, 0x6f, 0x06, 0x90, 0x43, 0x9f, 0x51, 0xc1,
	0xfe, 0xab, 0xe4, 0xf2, 0x79, 0x14, 0x56, 0xf2, 0x18, 0x40, 0x47, 0x11, 0x82, 0x70, 0x3a, 0x65,
	0x41, 0x90, 0x89, 0xb6, 0x8d, 0xa6, 0x13, 0x65, 0xc9, 0xc7, 0xac, 0x88, 0xa5, 0xd5, 0xb4, 0x1e,
	0xc2, 0x8e, 0xa6, 0x64, 0x7d, 0xea, 0xe6, 0x50, 0xb6, 0xb4, 0x53, 0xf3, 0x0b, 0xe8, 0x64, 0x92,
	0x54, 0x9b, 0x60, 0xde, 0x03, 0x82, 0x76, 0x99, 0x53, 0xb2, 0x35, 0x3b, 0x50, 0x4e, 0x6f, 0x8a,
	0x7a, 0x30, 0x3b, 0xd0, 0x4e, 0x73, 0xb1, 0x4c, 0x12, 0x7c, 0xc1, 0xc4, 0x41, 0x38, 0x3d, 0x67,
	0x71, 0xed, 0xcc, 0x97, 0x40, 0xd2, 0x60, 0xe2, 0x55, 0x70, 0x41, 0x17, 0x91, 0x57, 0x7c, 0x20,
	0x37, 0xa1, 0xe8, 0xd8, 0x41, 0xb7, 0xb0, 0x57, 0xdc, 0xaf, 0x1f, 0x40, 0xaa, 0xbe, 0x12, 0x36,
	0x87, 0xd8, 0x38, 0xca, 0x53, 0xb4, 0x33, 0xbb, 0x50, 0xd8, 0xb8, 0x29, 0x05, 0xc7, 0x36, 0x7f,
	0x92, 0x0a, 0x29, 0x7e, 0xf9, 0x25, 0x8b, 0xc8, 0x1e, 0x94, 0xe5, 0x7e, 0xaa, 0x40, 0x6a, 0x43,
	0x18, 0xe0, 0x8c, 0x93, 0x04, 0x4b, 0x19, 0xcc, 0x7b, 0x50, 0x51, 0x3e, 0xaf, 0xc0, 0x1d, 0x00,
	0x28, 0xae, 0xfc, 0x20, 0x13, 0xbe, 0xb1, 0x89, 0xff, 0x0a, 0x9a, 0xc7, 0x8e, 0x3b, 0x43, 0xe8,
	0x6a, 0x59, 0x92, 0x2e, 0x5c, 0xa7, 0xb6, 0xed, 0xb3, 0x20, 0xc0, 0x96, 0xab, 0x5a, 0xd1, 0xa3,
	0x69, 0x42, 0x2b, 0x71, 0xa6, 0xd3, 0x6f, 0x40, 0x81, 0x9f, 0xa3, 0xb7, 0x2d, 0xab, 0xc0, 0xcf,
	0xcd, 0xa7, 0xd0, 0x7e, 0xcd, 0xf9, 0x79, 0xe8, 0xa5, 0x5f, 0xd9, 0x88, 0x5f, 0x59, 0xbd, 0xe4,
	0x15, 0xef, 0x81, 0xa4, 0x97, 0xc7, 0x35, 0x2e, 0xc9, 0x74, 0xd0, 0x43, 0x36, 0x4d, 0xc4, 0xc9,
	0x77, 0xa0, 0xb4, 0x64, 0x82, 0xc6, 0x43, 0x35, 0xb6, 0xff, 0x98, 0x09, 0x6a, 0x53, 0x41, 0x2d,
	0xb4, 0x9b, 0x3f, 0x83, 0x26, 0x26, 0xea, 0x9e, 0xf1, 0xab, 0x56, 0xe3, 0x7e, 0x36, 0xd4, 0xda,
	0xb0, 0x9d, 0x78, 0x7f, 0xa6, 0x0c, 0x49, 0xf4, 0xbf, 0x31, 0xa0, 0x95, 0xbc, 0x40, 0x07, 0x6f,
	0x42, 0x49, 0x5c, 0x78, 0x2a, 0xf8, 0xc6, 0xb0, 0x91, 0x2c, 0x3f, 0xbd, 0xf0, 0x98, 0x85, 0x36,
	0x32, 0x80, 0x2d, 0xee, 0x31, 0x9f, 0x0a, 0xee, 0xaf, 0x26, 0xf1, 0x56, 0x5b, 0xac, 0x98, 0x23,
	0xf9, 0x53, 0xea, 0xd1, 0xa9, 0x23, 0x2e, 0xf0, 0x73, 0xcf, 0xf0, 0x0f, 0xb5, 0xc5, 0x8a, 0x39,
	0xe6, 0x12, 0x9a, 0xcf, 0x1d, 0xd7, 0x7e, 0xc3, 0xa8, 0x7f, 0xd5, 0xc4, 0xbf, 0x05, 0xe5, 0x40,
	0x50, 0x5f, 0xcd, 0x9d, 0x55, 0x8a, 0x32, 0x26, 0x27, 0xa6, 0x1a, 0x3a, 0xea, 0xc1, 0x7c, 0x04,
	0xad, 0xe4, 0x75, 0xba, 0x0c, 0x97, 0xf7, 0x36, 0x81, 0xd6, 0x51, 0xb8, 0xf4, 0x32, 0x53, 0xe0,
	0x07, 0xd0, 0x4e, 0x61, 0x79, 0x57, 0x1b, 0xdb, 0xbe, 0x01, 0xf5, 0xf4, 0xcc, 0x35, 0xff, 0x65,
	0x40, 0x47, 0x02, 0x27, 0xe1, 0x72, 0x49, 0xfd, 0x8b, 0xd8, 0xd3, 0x2d, 0x80, 0x30, 0x60, 0xf6,
	0x38, 0xf0, 0xe8, 0x94, 0xe9, 0xf1, 0x51, 0x95, 0xc8, 0x89, 0x04, 0xc8, 0x1d, 0x68, 0xd2, 0x8f,
	0xd4, 0x59, 0xc8, 0x83, 0x4b, 0x73, 0xd4, 0x14, 0x6e, 0xc4, 0xb0, 0x22, 0xca, 0xc9, 0x2a, 0xfd,
	0x38, 0xee, 0x0c, 0x5b, 0x25, 0x3a, 0x30, 0x02, 0x66, 0x8f, 0x14, 0x24, 0xa7, 0x39, 0x52, 0x98,
	0x62, 0xa8, 0xd9, 0x8b, 0x6f, 0xff, 0x91, 0x22, 0x7c, 0x1b, 0x1a, 0x48, 0x98, 0x50, 0xd7, 0xfe,
	0x85, 0x63, 0x8b, 0xb9, 0x1e, 0xba, 0xdb, 0x12, 0x3d, 0x88, 0x40, 0xf2, 0x00, 0x3a, 0x49, 0x4c,
	0x09, 0xb7, 0xa2, 0x06, 0x74, 0x6c, 0x8a, 0x17, 0x60, 0x59, 0x69, 0x30, 0x9f, 0x70, 0xea, 0xdb,
	0x51, 0x3d, 0xfe, 0x52, 0x84, 0x76, 0x0a, 0xd4, 0xd5, 0xb8, 0xf2, 0xc9, 0x74, 0x17, 0x5a, 0x48,
	0x9c, 0x72, 0xd7, 0x65, 0x53, 0xa9, 0xc1, 0x02, 0x5d, 0x98, 0xa6, 0xc4, 0x0f, 0x13, 0x98, 0xdc,
	0x87, 0xf6, 0x84, 0x73, 0x11, 0x08, 0x9f, 0x7a, 0xe3, 0xe8, 0x4b, 0x2a, 0xe2, 0x47, 0xdf, 0x8a,
	0x0d, 0xfa, 0x43, 0x92, 0x7e, 0x51, 0x03, 0xb9, 0x74, 0x11, 0x73, 0x4b, 0xc8, 0x6d, 0x46, 0x78,
	0x8a, 0xca, 0x3e, 0xe5, 0xa8, 0x65, 0x45, 0x8d, 0xf0, 0x88, 0xfa, 0x08, 0x3b, 0x59, 0x04, 0x58,
	0xa3, 0xda, 0x70, 0x37, 0x25, 0x4c, 0xd6, 0xf4, 0x84, 0xa5, 0xc8, 0xe4, 0x7b, 0x50, 0x51, 0xa7,
	0x5d, 0xf7, 0x3a, 0x2e, 0xfb, 0xc6, 0x40, 0xe9, 0xcb, 0x41, 0xa4, 0x2f, 0x07, 0x47, 0x5a, 0x7f,
	0x5a, 0x9a, 0x48, 0x9e, 0x40, 0x0d, 0x95, 0x98, 0xe7, 0xb8, 0x33, 0x66, 0x77, 0xb7, 0x70, 0x5d,
	0x6f, 0x65, 0xdd, 0x69, 0xa4, 0x4b, 0x2d, 0x90, 0xf4, 0x63, 0x64, 0x93, 0xa7, 0x50, 0xc7, 0xc5,
	0x1f, 0x42, 0xe6, 0x3b, 0xcc, 0xee, 0x56, 0x2f, 0x5d, 0x8d, 0x2f, 0x7b, 0xa7, 0xe8, 0xe6, 0x6f,
	0x0d, 0xd8, 0xd1, 0xda, 0xea, 0x25, 0xa3, 0x0b, 0x31, 0x8f, 0xbe, 0xf3, 0x2f, 0xa1, 0x32, 0xc1,
	0x13, 0x43, 0x0b, 0x52, 0xfd, 0x24, 0xdb, 0x8d, 0xb9, 0x53, 0xff, 0xc2, 0x13, 0xcc, 0x1e, 0xa3,
	0x60, 0xc5, 0x0f, 0xdd, 0xda, 0x8e, 0xd1, 0x63, 0xa9, 0x5c, 0xbf, 0x09, 0x91, 0x1e, 0x1d, 0x3b,
	0xae, 0xcd, 0x3e, 0xe9, 0xd6, 0xae, 0x6b, 0x70, 0x24, 0x31, 0xf9, 0x19, 0x79, 0x3e, 0xff, 0x39,
	0x9b, 0x0a, 0xd9, 0x3b, 0x25, 0xf4, 0x53, 0xd5, 0xc8, 0xc8, 0x36, 0xff, 0x6e, 0xc0, 0x76, 0x26,
	0x36, 0xb9, 0x7b, 0x4b, 0xc7, 0x75, 0x96, 0xe1, 0x72, 0xec, 0xb3, 0x0f, 0xa1, 0xe3, 0x33, 0x5b,
	0x6b, 0xee, 0xa6, 0xc6, 0x2d, 0x0d, 0x27, 0x87, 0xbb, 0x12, 0xdf, 0xfa, 0x70, 0xbf, 0x0b, 0x2d,
	0x2d, 0x62, 0xc5, 0xdc, 0x67, 0xc1, 0x9c, 0x2f, 0x6c, 0x2d, 0x8d, 0x9b, 0x0a, 0x3f, 0x8d, 0x60,
	0xd9, 0x81, 0x91, 0x96, 0x49, 0xb8, 0x25, 0xe4, 0xb6, 0xb4, 0x21, 0x21, 0xdf, 0x86, 0x3a, 0x77,
	0x17, 0x8e, 0xcb, 0xc6, 0x6a, 0xc2, 0x94, 0x91, 0x57, 0x53, 0x18, 0x4e, 0x21, 0x79, 0x78, 0xe9,
	0xe4, 0xb1, 0xa1, 0xea, 0x56, 0xf4, 0x68, 0xfe, 0xd2, 0x80, 0x2f, 0x72, 0x7b, 0xa0, 0xbf, 0xac,
	0x87, 0x50, 0x99, 0x23, 0xa2, 0x8f, 0xb0, 0x6e, 0xba, 0x07, 0x33, 0x2b, 0x34, 0x8f, 0x3c, 0x01,
	0xf0, 0x99, 0x1d, 0xba, 0x36, 0x75, 0xa7, 0x17, 0xfa, 0x4c, 0xb8, 0x91, 0xba, 0x2d, 0x58, 0xb1,
	0xf1, 0x64, 0x3a, 0x67, 0x4b, 0x66, 0xa5, 0xe8, 0xe6, 0x3f, 0x0d, 0xe8, 0xbc, 0x9d, 0xc8, 0xea,
	0x67, 0x7b, 0x61, 0x75, 0xcf, 0x8d, 0x75, 0x7b, 0x9e, 0xb4, 0x4c, 0x21, 0xd3, 0x32, 0xd9, 0x6d,
	0x2e, 0xe6, 0xb6, 0x59, 0xca, 0x51, 0x3c, 0x14, 0xc6, 0xf4, 0x4c, 0x30, 0x7f, 0x1c, 0x15, 0x49,
	0x5f, 0x44, 0xd0, 0xf4, 0x4c, 0x5a, 0xa2, 0x8b, 0xd2, 0x77, 0x81, 0x30, 0xd7, 0x1e, 0x4f, 0xd8,
	0x19, 0xf7, 0x59, 0x4c, 0x57, 0x43, 0xaf, 0xc5, 0x5c, 0xfb, 0x00, 0x0d, 0x11, 0x3b, 0x3e, 0x69,
	0x2a, 0xa9, 0xbb, 0x99, 0xf9, 0x6b, 0x03, 0x76, 0xb2, 0x99, 0xea, 0x8a, 0x3f, 0x5a, 0xb9, 0x90,
	0x6c, 0xae, 0x79, 0xcc, 0xfc, 0x9f, 0xaa, 0x3e, 0xfc, 0x53, 0x11, 0xea, 0xaf, 0xa8, 0x3d, 0x8a,
	0xde, 0x42, 0x46, 0x00, 0x89, 0xae, 0x25, 0x37, 0x53, 0xef, 0x5f, 0x91, 0xbb, 0xbd, 0x5b, 0x1b,
	0xac, 0x3a, 0x9d, 0x43, 0xd8, 0x8a, 0xa4, 0x17, 0xe9, 0xa5, 0xa8, 0x39, 0x71, 0xd7, 0xbb, 0xb1,
	0xd6, 0xa6, 0x9d, 0x8c, 0x00, 0x12, 0x71, 0x95, 0x89, 0x67, 0x45, 0xb2, 0x65, 0xe2, 0x59, 0xa3,
	0xc8, 0x0e, 0x61, 0x2b, 0x12, 0x3a, 0x99, 0x78, 0x72, 0xf2, 0x2a, 0x13, 0xcf, 0x8a, 0x32, 0x3a,
	0x84, 0xad, 0x48, 0x26, 0x64, 0x9c, 0xe4, 0xa4, 0x4a, 0xc6, 0xc9, 0x8a, 0xae, 0x78, 0x0e, 0xd5,
	0x58, 0x21, 0x90, 0x34, 0x33, 0xaf, 0x25, 0x7a, 0x37, 0xd7, 0x1b, 0x95, 0x9f, 0xe1, 0x1f, 0x0a,
	0xd0, 0x7a, 0xfb, 0x91, 0xf9, 0x0b, 0x7a, 0xf1, 0xb5, 0xec, 0xe0, 0xff, 0x29, 0x4e, 0x59, 0xb4,
	0xe8, 0xc6, 0x9b, 0x29, 0x5a, 0xee, 0x0e, 0x9d, 0x29, 0xda, 0xca, 0x15, 0xf9, 0x35, 0xd4, 0x52,
	0x97, 0x36, 0x92, 0x09, 0x7d, 0xe5, 0xc6, 0xda, 0xdb, 0xdd, 0x64, 0xd6, 0xa5, 0xfb, 0xbd, 0x01,
	0x1d, 0xfc, 0x33, 0xe2, 0x44, 0x70, 0x9f, 0x25, 0xd5, 0x3b, 0x80, 0xb2, 0xf2, 0xff, 0x55, 0xee,
	0xc8, 0x5d, 0xeb, 0x79, 0xcd, 0x59, 0x6c, 0x5e, 0x23, 0x2f, 0xa1, 0x1a, 0x0b, 0x95, 0x6c, 0xd9,
	0x72, 0x9a, 0x26, 0x5b, 0xb6, 0xbc, 0xb6, 0x31, 0xaf, 0x0d, 0x7f, 0x65, 0xc0, 0x4e, 0xea, 0x8f,
	0x88, 0x24, 0x4c, 0x0f, 0xbe, 0xda, 0xf0, 0xf7, 0x06, 0xb9, 0x9b, 0xfe, 0x0a, 0xfe, 0xe3, 0x7f,
	0x47, 0xbd, 0x7b, 0x57, 0xa1, 0xea, 0x82, 0xfd, 0xd1, 0x80, 0xa6, 0x9a, 0x3d, 0x49, 0x14, 0xef,
	0xa0, 0x9e, 0x1e, 0x64, 0x24, 0x5d, 0x9a, 0x35, 0xb3, 0xbc, 0xd7, 0xdf, 0x68, 0x8f, 0x6b, 0x77,
	0x9a, 0x3f, 0x76, 0xfb, 0x1b, 0x47, 0xa0, 0x76, 0xba, 0xb7, 0x99, 0x10, 0x79, 0x3d, 0x28, 0xfd,
	0xb4, 0xe0, 0x4d, 0x26, 0x15, 0x14, 0x24, 0xdf, 0xff, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x1d,
	0x67, 0x84, 0xd4, 0xdb, 0x13, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// KadInspectorClient is the client API for KadInspector service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type KadInspectorClient interface {
	// CountNodes returns the number of nodes in the routing table
	CountNodes(ctx context.Context, in *CountNodesRequest, opts ...grpc.CallOption) (*CountNodesResponse, error)
	// PingNode sends a PING RPC to a node and returns its availability
	PingNode(ctx context.Context, in *PingNodeRequest, opts ...grpc.CallOption) (*PingNodeResponse, error)
	// LookupNode triggers a Kademlia FindNode and returns the response
	LookupNode(ctx context.Context, in *LookupNodeRequest, opts ...grpc.CallOption) (*LookupNodeResponse, error)
	// NodeInfo sends a PING RPC to a node and returns its local info
	NodeInfo(ctx context.Context, in *NodeInfoRequest, opts ...grpc.CallOption) (*NodeInfoResponse, error)
	// FindNear returns limit number of IDs "near" the Start ID
	FindNear(ctx context.Context, in *FindNearRequest, opts ...grpc.CallOption) (*FindNearResponse, error)
	// DumpNodes returns all the nodes in the node database
	DumpNodes(ctx context.Context, in *DumpNodesRequest, opts ...grpc.CallOption) (*DumpNodesResponse, error)
}

type kadInspectorClient struct {
	cc *grpc.ClientConn
}

func NewKadInspectorClient(cc *grpc.ClientConn) KadInspectorClient {
	return &kadInspectorClient{cc}
}

func (c *kadInspectorClient) CountNodes(ctx context.Context, in *CountNodesRequest, opts ...grpc.CallOption) (*CountNodesResponse, error) {
	out := new(CountNodesResponse)
	err := c.cc.Invoke(ctx, "/inspector.KadInspector/CountNodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kadInspectorClient) PingNode(ctx context.Context, in *PingNodeRequest, opts ...grpc.CallOption) (*PingNodeResponse, error) {
	out := new(PingNodeResponse)
	err := c.cc.Invoke(ctx, "/inspector.KadInspector/PingNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kadInspectorClient) LookupNode(ctx context.Context, in *LookupNodeRequest, opts ...grpc.CallOption) (*LookupNodeResponse, error) {
	out := new(LookupNodeResponse)
	err := c.cc.Invoke(ctx, "/inspector.KadInspector/LookupNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kadInspectorClient) NodeInfo(ctx context.Context, in *NodeInfoRequest, opts ...grpc.CallOption) (*NodeInfoResponse, error) {
	out := new(NodeInfoResponse)
	err := c.cc.Invoke(ctx, "/inspector.KadInspector/NodeInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kadInspectorClient) FindNear(ctx context.Context, in *FindNearRequest, opts ...grpc.CallOption) (*FindNearResponse, error) {
	out := new(FindNearResponse)
	err := c.cc.Invoke(ctx, "/inspector.KadInspector/FindNear", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kadInspectorClient) DumpNodes(ctx context.Context, in *DumpNodesRequest, opts ...grpc.CallOption) (*DumpNodesResponse, error) {
	out := new(DumpNodesResponse)
	err := c.cc.Invoke(ctx, "/inspector.KadInspector/DumpNodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// KadInspectorServer is the server API for KadInspector service.
type KadInspectorServer interface {
	// CountNodes returns the number of nodes in the routing table
	CountNodes(context.Context, *CountNodesRequest) (*CountNodesResponse, error)
	// PingNode sends a PING RPC to a node and returns its availability
	PingNode(context.Context, *PingNodeRequest) (*PingNodeResponse, error)
	// LookupNode triggers a Kademlia FindNode and returns the response
	LookupNode(context.Context, *LookupNodeRequest) (*LookupNodeResponse, error)
	// NodeInfo sends a PING RPC to a node and returns its local info
	NodeInfo(context.Context, *NodeInfoRequest) (*NodeInfoResponse, error)
	// FindNear returns limit number of IDs "near" the Start ID
	FindNear(context.Context, *FindNearRequest) (*FindNearResponse, error)
	// DumpNodes returns all the nodes in the node database
	DumpNodes(context.Context, *DumpNodesRequest) (*DumpNodesResponse, error)
}

func RegisterKadInspectorServer(s *grpc.Server, srv KadInspectorServer) {
	s.RegisterService(&_KadInspector_serviceDesc, srv)
}

func _KadInspector_CountNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CountNodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KadInspectorServer).CountNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inspector.KadInspector/CountNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KadInspectorServer).CountNodes(ctx, req.(*CountNodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KadInspector_PingNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KadInspectorServer).PingNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inspector.KadInspector/PingNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KadInspectorServer).PingNode(ctx, req.(*PingNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KadInspector_LookupNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LookupNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KadInspectorServer).LookupNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inspector.KadInspector/LookupNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KadInspectorServer).LookupNode(ctx, req.(*LookupNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KadInspector_NodeInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NodeInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KadInspectorServer).NodeInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inspector.KadInspector/NodeInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KadInspectorServer).NodeInfo(ctx, req.(*NodeInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KadInspector_FindNear_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindNearRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KadInspectorServer).FindNear(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inspector.KadInspector/FindNear",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KadInspectorServer).FindNear(ctx, req.(*FindNearRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KadInspector_DumpNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DumpNodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KadInspectorServer).DumpNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inspector.KadInspector/DumpNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KadInspectorServer).DumpNodes(ctx, req.(*DumpNodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _KadInspector_serviceDesc = grpc.ServiceDesc{
	ServiceName: "inspector.KadInspector",
	HandlerType: (*KadInspectorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CountNodes",
			Handler:    _KadInspector_CountNodes_Handler,
		},
		{
			MethodName: "PingNode",
			Handler:    _KadInspector_PingNode_Handler,
		},
		{
			MethodName: "LookupNode",
			Handler:    _KadInspector_LookupNode_Handler,
		},
		{
			MethodName: "NodeInfo",
			Handler:    _KadInspector_NodeInfo_Handler,
		},
		{
			MethodName: "FindNear",
			Handler:    _KadInspector_FindNear_Handler,
		},
		{
			MethodName: "DumpNodes",
			Handler:    _KadInspector_DumpNodes_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "inspector.proto",
}

// OverlayInspectorClient is the client API for OverlayInspector service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OverlayInspectorClient interface {
	// CountNodes returns the number of nodes in the cache
	CountNodes(ctx context.Context, in *CountNodesRequest, opts ...grpc.CallOption) (*CountNodesResponse, error)
	// DumpNodes returns all the nodes in the cache
	DumpNodes(ctx context.Context, in *DumpNodesRequest, opts ...grpc.CallOption) (*DumpNodesResponse, error)
	// GetStats returns the stats for a particular node ID
	GetStats(ctx context.Context, in *GetStatsRequest, opts ...grpc.CallOption) (*GetStatsResponse, error)
	// CreateStats creates a node with specified stats
	CreateStats(ctx context.Context, in *CreateStatsRequest, opts ...grpc.CallOption) (*CreateStatsResponse, error)
}

type overlayInspectorClient struct {
	cc *grpc.ClientConn
}

func NewOverlayInspectorClient(cc *grpc.ClientConn) OverlayInspectorClient {
	return &overlayInspectorClient{cc}
}

func (c *overlayInspectorClient) CountNodes(ctx context.Context, in *CountNodesRequest, opts ...grpc.CallOption) (*CountNodesResponse, error) {
	out := new(CountNodesResponse)
	err := c.cc.Invoke(ctx, "/inspector.OverlayInspector/CountNodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *overlayInspectorClient) DumpNodes(ctx context.Context, in *DumpNodesRequest, opts ...grpc.CallOption) (*DumpNodesResponse, error) {
	out := new(DumpNodesResponse)
	err := c.cc.Invoke(ctx, "/inspector.OverlayInspector/DumpNodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *overlayInspectorClient) GetStats(ctx context.Context, in *GetStatsRequest, opts ...grpc.CallOption) (*GetStatsResponse, error) {
	out := new(GetStatsResponse)
	err := c.cc.Invoke(ctx, "/inspector.OverlayInspector/GetStats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *overlayInspectorClient) CreateStats(ctx context.Context, in *CreateStatsRequest, opts ...grpc.CallOption) (*CreateStatsResponse, error) {
	out := new(CreateStatsResponse)
	err := c.cc.Invoke(ctx, "/inspector.OverlayInspector/CreateStats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OverlayInspectorServer is the server API for OverlayInspector service.
type OverlayInspectorServer interface {
	// CountNodes returns the number of nodes in the cache
	CountNodes(context.Context, *CountNodesRequest) (*CountNodesResponse, error)
	// DumpNodes returns all the nodes in the cache
	DumpNodes(context.Context, *DumpNodesRequest) (*DumpNodesResponse, error)
	// GetStats returns the stats for a particular node ID
	GetStats(context.Context, *GetStatsRequest) (*GetStatsResponse, error)
	// CreateStats creates a node with specified stats
	CreateStats(context.Context, *CreateStatsRequest) (*CreateStatsResponse, error)
}

func RegisterOverlayInspectorServer(s *grpc.Server, srv OverlayInspectorServer) {
	s.RegisterService(&_OverlayInspector_serviceDesc, srv)
}

func _OverlayInspector_CountNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CountNodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OverlayInspectorServer).CountNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inspector.OverlayInspector/CountNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OverlayInspectorServer).CountNodes(ctx, req.(*CountNodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OverlayInspector_DumpNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DumpNodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OverlayInspectorServer).DumpNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inspector.OverlayInspector/DumpNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OverlayInspectorServer).DumpNodes(ctx, req.(*DumpNodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OverlayInspector_GetStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStatsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OverlayInspectorServer).GetStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inspector.OverlayInspector/GetStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OverlayInspectorServer).GetStats(ctx, req.(*GetStatsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OverlayInspector_CreateStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateStatsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OverlayInspectorServer).CreateStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inspector.OverlayInspector/CreateStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OverlayInspectorServer).CreateStats(ctx, req.(*CreateStatsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OverlayInspector_serviceDesc = grpc.ServiceDesc{
	ServiceName: "inspector.OverlayInspector",
	HandlerType: (*OverlayInspectorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CountNodes",
			Handler:    _OverlayInspector_CountNodes_Handler,
		},
		{
			MethodName: "DumpNodes",
			Handler:    _OverlayInspector_DumpNodes_Handler,
		},
		{
			MethodName: "GetStats",
			Handler:    _OverlayInspector_GetStats_Handler,
		},
		{
			MethodName: "CreateStats",
			Handler:    _OverlayInspector_CreateStats_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "inspector.proto",
}

// PieceStoreInspectorClient is the client API for PieceStoreInspector service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PieceStoreInspectorClient interface {
	// Stats return space and bandwidth stats for a storagenode
	Stats(ctx context.Context, in *StatsRequest, opts ...grpc.CallOption) (*StatSummaryResponse, error)
	// Dashboard returns stats for a specific storagenode
	Dashboard(ctx context.Context, in *DashboardRequest, opts ...grpc.CallOption) (*DashboardResponse, error)
}

type pieceStoreInspectorClient struct {
	cc *grpc.ClientConn
}

func NewPieceStoreInspectorClient(cc *grpc.ClientConn) PieceStoreInspectorClient {
	return &pieceStoreInspectorClient{cc}
}

func (c *pieceStoreInspectorClient) Stats(ctx context.Context, in *StatsRequest, opts ...grpc.CallOption) (*StatSummaryResponse, error) {
	out := new(StatSummaryResponse)
	err := c.cc.Invoke(ctx, "/inspector.PieceStoreInspector/Stats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pieceStoreInspectorClient) Dashboard(ctx context.Context, in *DashboardRequest, opts ...grpc.CallOption) (*DashboardResponse, error) {
	out := new(DashboardResponse)
	err := c.cc.Invoke(ctx, "/inspector.PieceStoreInspector/Dashboard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PieceStoreInspectorServer is the server API for PieceStoreInspector service.
type PieceStoreInspectorServer interface {
	// Stats return space and bandwidth stats for a storagenode
	Stats(context.Context, *StatsRequest) (*StatSummaryResponse, error)
	// Dashboard returns stats for a specific storagenode
	Dashboard(context.Context, *DashboardRequest) (*DashboardResponse, error)
}

func RegisterPieceStoreInspectorServer(s *grpc.Server, srv PieceStoreInspectorServer) {
	s.RegisterService(&_PieceStoreInspector_serviceDesc, srv)
}

func _PieceStoreInspector_Stats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PieceStoreInspectorServer).Stats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inspector.PieceStoreInspector/Stats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PieceStoreInspectorServer).Stats(ctx, req.(*StatsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PieceStoreInspector_Dashboard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DashboardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PieceStoreInspectorServer).Dashboard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inspector.PieceStoreInspector/Dashboard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PieceStoreInspectorServer).Dashboard(ctx, req.(*DashboardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PieceStoreInspector_serviceDesc = grpc.ServiceDesc{
	ServiceName: "inspector.PieceStoreInspector",
	HandlerType: (*PieceStoreInspectorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Stats",
			Handler:    _PieceStoreInspector_Stats_Handler,
		},
		{
			MethodName: "Dashboard",
			Handler:    _PieceStoreInspector_Dashboard_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "inspector.proto",
}

// IrreparableInspectorClient is the client API for IrreparableInspector service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IrreparableInspectorClient interface {
	// ListIrreparableSegments returns damaged segments
	ListIrreparableSegments(ctx context.Context, in *ListIrreparableSegmentsRequest, opts ...grpc.CallOption) (*ListIrreparableSegmentsResponse, error)
}

type irreparableInspectorClient struct {
	cc *grpc.ClientConn
}

func NewIrreparableInspectorClient(cc *grpc.ClientConn) IrreparableInspectorClient {
	return &irreparableInspectorClient{cc}
}

func (c *irreparableInspectorClient) ListIrreparableSegments(ctx context.Context, in *ListIrreparableSegmentsRequest, opts ...grpc.CallOption) (*ListIrreparableSegmentsResponse, error) {
	out := new(ListIrreparableSegmentsResponse)
	err := c.cc.Invoke(ctx, "/inspector.IrreparableInspector/ListIrreparableSegments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IrreparableInspectorServer is the server API for IrreparableInspector service.
type IrreparableInspectorServer interface {
	// ListIrreparableSegments returns damaged segments
	ListIrreparableSegments(context.Context, *ListIrreparableSegmentsRequest) (*ListIrreparableSegmentsResponse, error)
}

func RegisterIrreparableInspectorServer(s *grpc.Server, srv IrreparableInspectorServer) {
	s.RegisterService(&_IrreparableInspector_serviceDesc, srv)
}

func _IrreparableInspector_ListIrreparableSegments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListIrreparableSegmentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IrreparableInspectorServer).ListIrreparableSegments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inspector.IrreparableInspector/ListIrreparableSegments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IrreparableInspectorServer).ListIrreparableSegments(ctx, req.(*ListIrreparableSegmentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _IrreparableInspector_serviceDesc = grpc.ServiceDesc{
	ServiceName: "inspector.IrreparableInspector",
	HandlerType: (*IrreparableInspectorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListIrreparableSegments",
			Handler:    _IrreparableInspector_ListIrreparableSegments_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "inspector.proto",
}

// HealthInspectorClient is the client API for HealthInspector service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HealthInspectorClient interface {
	// ObjectHealth will returns stats about the health of an object
	ObjectHealth(ctx context.Context, in *ObjectHealthRequest, opts ...grpc.CallOption) (*ObjectHealthResponse, error)
	// SegmentHealth will returns stats about the health of a segment
	SegmentHealth(ctx context.Context, in *SegmentHealthRequest, opts ...grpc.CallOption) (*SegmentHealthResponse, error)
}

type healthInspectorClient struct {
	cc *grpc.ClientConn
}

func NewHealthInspectorClient(cc *grpc.ClientConn) HealthInspectorClient {
	return &healthInspectorClient{cc}
}

func (c *healthInspectorClient) ObjectHealth(ctx context.Context, in *ObjectHealthRequest, opts ...grpc.CallOption) (*ObjectHealthResponse, error) {
	out := new(ObjectHealthResponse)
	err := c.cc.Invoke(ctx, "/inspector.HealthInspector/ObjectHealth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *healthInspectorClient) SegmentHealth(ctx context.Context, in *SegmentHealthRequest, opts ...grpc.CallOption) (*SegmentHealthResponse, error) {
	out := new(SegmentHealthResponse)
	err := c.cc.Invoke(ctx, "/inspector.HealthInspector/SegmentHealth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HealthInspectorServer is the server API for HealthInspector service.
type HealthInspectorServer interface {
	// ObjectHealth will returns stats about the health of an object
	ObjectHealth(context.Context, *ObjectHealthRequest) (*ObjectHealthResponse, error)
	// SegmentHealth will returns stats about the health of a segment
	SegmentHealth(context.Context, *SegmentHealthRequest) (*SegmentHealthResponse, error)
}

func RegisterHealthInspectorServer(s *grpc.Server, srv HealthInspectorServer) {
	s.RegisterService(&_HealthInspector_serviceDesc, srv)
}

func _HealthInspector_ObjectHealth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ObjectHealthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HealthInspectorServer).ObjectHealth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inspector.HealthInspector/ObjectHealth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HealthInspectorServer).ObjectHealth(ctx, req.(*ObjectHealthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HealthInspector_SegmentHealth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SegmentHealthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HealthInspectorServer).SegmentHealth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inspector.HealthInspector/SegmentHealth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HealthInspectorServer).SegmentHealth(ctx, req.(*SegmentHealthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _HealthInspector_serviceDesc = grpc.ServiceDesc{
	ServiceName: "inspector.HealthInspector",
	HandlerType: (*HealthInspectorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ObjectHealth",
			Handler:    _HealthInspector_ObjectHealth_Handler,
		},
		{
			MethodName: "SegmentHealth",
			Handler:    _HealthInspector_SegmentHealth_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "inspector.proto",
}
