// Code generated by protoc-gen-go. DO NOT EDIT.
// source: kadcli.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CountNodesResponse struct {
	Kademlia             int64    `protobuf:"varint,1,opt,name=kademlia,proto3" json:"kademlia,omitempty"`
	Overlay              int64    `protobuf:"varint,2,opt,name=overlay,proto3" json:"overlay,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountNodesResponse) Reset()         { *m = CountNodesResponse{} }
func (m *CountNodesResponse) String() string { return proto.CompactTextString(m) }
func (*CountNodesResponse) ProtoMessage()    {}
func (*CountNodesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_kadcli_876a2f6c9e943bb8, []int{0}
}
func (m *CountNodesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountNodesResponse.Unmarshal(m, b)
}
func (m *CountNodesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountNodesResponse.Marshal(b, m, deterministic)
}
func (dst *CountNodesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountNodesResponse.Merge(dst, src)
}
func (m *CountNodesResponse) XXX_Size() int {
	return xxx_messageInfo_CountNodesResponse.Size(m)
}
func (m *CountNodesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CountNodesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CountNodesResponse proto.InternalMessageInfo

func (m *CountNodesResponse) GetKademlia() int64 {
	if m != nil {
		return m.Kademlia
	}
	return 0
}

func (m *CountNodesResponse) GetOverlay() int64 {
	if m != nil {
		return m.Overlay
	}
	return 0
}

type CountNodesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountNodesRequest) Reset()         { *m = CountNodesRequest{} }
func (m *CountNodesRequest) String() string { return proto.CompactTextString(m) }
func (*CountNodesRequest) ProtoMessage()    {}
func (*CountNodesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_kadcli_876a2f6c9e943bb8, []int{1}
}
func (m *CountNodesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountNodesRequest.Unmarshal(m, b)
}
func (m *CountNodesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountNodesRequest.Marshal(b, m, deterministic)
}
func (dst *CountNodesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountNodesRequest.Merge(dst, src)
}
func (m *CountNodesRequest) XXX_Size() int {
	return xxx_messageInfo_CountNodesRequest.Size(m)
}
func (m *CountNodesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CountNodesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CountNodesRequest proto.InternalMessageInfo

func init() {
	proto.RegisterType((*CountNodesResponse)(nil), "kadcli.CountNodesResponse")
	proto.RegisterType((*CountNodesRequest)(nil), "kadcli.CountNodesRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// KadCliClient is the client API for KadCli service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type KadCliClient interface {
	// CountNodes returns the number of nodes in the cache and in the routing table
	CountNodes(ctx context.Context, in *CountNodesRequest, opts ...grpc.CallOption) (*CountNodesResponse, error)
}

type kadCliClient struct {
	cc *grpc.ClientConn
}

func NewKadCliClient(cc *grpc.ClientConn) KadCliClient {
	return &kadCliClient{cc}
}

func (c *kadCliClient) CountNodes(ctx context.Context, in *CountNodesRequest, opts ...grpc.CallOption) (*CountNodesResponse, error) {
	out := new(CountNodesResponse)
	err := c.cc.Invoke(ctx, "/kadcli.KadCli/CountNodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// KadCliServer is the server API for KadCli service.
type KadCliServer interface {
	// CountNodes returns the number of nodes in the cache and in the routing table
	CountNodes(context.Context, *CountNodesRequest) (*CountNodesResponse, error)
}

func RegisterKadCliServer(s *grpc.Server, srv KadCliServer) {
	s.RegisterService(&_KadCli_serviceDesc, srv)
}

func _KadCli_CountNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CountNodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KadCliServer).CountNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kadcli.KadCli/CountNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KadCliServer).CountNodes(ctx, req.(*CountNodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _KadCli_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kadcli.KadCli",
	HandlerType: (*KadCliServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CountNodes",
			Handler:    _KadCli_CountNodes_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "kadcli.proto",
}

func init() { proto.RegisterFile("kadcli.proto", fileDescriptor_kadcli_876a2f6c9e943bb8) }

var fileDescriptor_kadcli_876a2f6c9e943bb8 = []byte{
	// 153 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xc9, 0x4e, 0x4c, 0x49,
	0xce, 0xc9, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x83, 0xf0, 0x94, 0xbc, 0xb8, 0x84,
	0x9c, 0xf3, 0x4b, 0xf3, 0x4a, 0xfc, 0xf2, 0x53, 0x52, 0x8b, 0x83, 0x52, 0x8b, 0x0b, 0xf2, 0xf3,
	0x8a, 0x53, 0x85, 0xa4, 0xb8, 0x38, 0xb2, 0x13, 0x53, 0x52, 0x73, 0x73, 0x32, 0x13, 0x25, 0x18,
	0x15, 0x18, 0x35, 0x98, 0x83, 0xe0, 0x7c, 0x21, 0x09, 0x2e, 0xf6, 0xfc, 0xb2, 0xd4, 0xa2, 0x9c,
	0xc4, 0x4a, 0x09, 0x26, 0xb0, 0x14, 0x8c, 0xab, 0x24, 0xcc, 0x25, 0x88, 0x6c, 0x56, 0x61, 0x69,
	0x6a, 0x71, 0x89, 0x91, 0x2f, 0x17, 0x9b, 0x77, 0x62, 0x8a, 0x73, 0x4e, 0xa6, 0x90, 0x33, 0x17,
	0x17, 0x42, 0x5a, 0x48, 0x52, 0x0f, 0xea, 0x1e, 0x0c, 0x2d, 0x52, 0x52, 0xd8, 0xa4, 0x20, 0x2e,
	0x73, 0x62, 0x89, 0x62, 0x2a, 0x48, 0x4a, 0x62, 0x03, 0x7b, 0xc2, 0x18, 0x10, 0x00, 0x00, 0xff,
	0xff, 0x53, 0xe2, 0x81, 0xad, 0xd4, 0x00, 0x00, 0x00,
}
